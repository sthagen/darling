/*
 This file is part of Darling.

 Copyright (C) 2021 Lubos Dolezel

 Darling is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 Darling is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with Darling.  If not, see <http://www.gnu.org/licenses/>.
*/


#ifndef _SkyLight_H_
#define _SkyLight_H_

#import <Foundation/Foundation.h>

#import <SkyLight/MTLResource.h>
#import <SkyLight/MTLResourceSPI.h>
#import <SkyLight/SLDataTimelineConnection.h>
#import <SkyLight/SLDataTimelineProcess.h>
#import <SkyLight/SLDataTimelineProcessWindows.h>
#import <SkyLight/SLDataTimelineServerSnapshot.h>
#import <SkyLight/SLDataTimelineSession.h>
#import <SkyLight/SLDataTimelineSessionProcessCollection.h>
#import <SkyLight/SLDataTimelineSnapshotCollection.h>
#import <SkyLight/SLDataTimelineSnapshotCollectionMetadata.h>
#import <SkyLight/SLDataTimelineUpdate.h>
#import <SkyLight/SLXPCConvertible.h>
#import <SkyLight/SLXPCExportable.h>
#import <SkyLight/SLXPCImportable.h>
#import <SkyLight/CGXConnectionBox.h>
#import <SkyLight/SLDataTimelineConfig.h>
#import <SkyLight/SLDataTimelineConnection.h>
#import <SkyLight/SLDataTimelineUpdate.h>
#import <SkyLight/SLDataTimelineSnapshotCollection.h>
#import <SkyLight/SLDataTimelineServerSnapshotEntry.h>
#import <SkyLight/SLDataTimelineSessionEntry.h>
#import <SkyLight/SLDataTimelineSessionPlaceholderEntry.h>
#import <SkyLight/SLDataTimelineSessionSnapshotEntry.h>
#import <SkyLight/SLDataTimelineProcessEntry.h>
#import <SkyLight/SLSecureCursorAssertion.h>
#import <SkyLight/SLSecureCursorAssertionManager.h>
#import <SkyLight/SLSessionOwner.h>

void* SLAcquireDisplayFadeReservation(void);
void* SLAssociateMouseAndMouseCursorPosition(void);
void* SLBeginDisplayConfiguration(void);
void* SLCFDictionaryGetBoolean(void);
void* SLCFDictionaryGetFloat(void);
void* SLCFDictionaryGetInteger(void);
void* SLCFDictionaryGetNumber(void);
void* SLCFDictionaryGetRect(void);
void* SLCFDictionaryGetSize(void);
void* SLCancelDisplayConfiguration(void);
void* SLCaptureAllDisplays(void);
void* SLCaptureAllDisplaysWithOptions(void);
void* SLCompleteDisplayConfiguration(void);
void* SLConfigureDisplayFadeEffect(void);
void* SLConfigureDisplayMirrorOfDisplay(void);
void* SLConfigureDisplayMode(void);
void* SLConfigureDisplayOrigin(void);
void* SLConfigureDisplayStereoOperation(void);
void* SLConfigureDisplayWithDisplayMode(void);
void* SLContextCopyDisplayCaptureContentsToRect(void);
void* SLContextCopyWindowCaptureContentsToRect(void);
void* SLContextCopyWindowContentsToRect(void);
void* SLCursorIsDrawnInFramebuffer(void);
void* SLCursorIsVisible(void);
void* SLDirectDisplayCopyCurrentMetalDevice(void);
void* SLDisplayAddressForPosition(void);
void* SLDisplayAvailableModes(void);
void* SLDisplayBaseAddress(void);
void* SLDisplayBeamPosition(void);
void* SLDisplayBestModeForParameters(void);
void* SLDisplayBestModeForParametersAndRefreshRate(void);
void* SLDisplayBestModeForParametersAndRefreshRateWithProperty(void);
void* SLDisplayBitsPerPixel(void);
void* SLDisplayBitsPerSample(void);
void* SLDisplayBounds(void);
void* SLDisplayBytesPerRow(void);
void* SLDisplayCanSetPalette(void);
void* SLDisplayCapture(void);
void* SLDisplayCaptureWithOptions(void);
void* SLDisplayCopyAllDisplayModes(void);
void* SLDisplayCopyColorSpace(void);
void* SLDisplayCopyDisplayMode(void);
void* SLDisplayCreateImage(void);
void* SLDisplayCreateImageForRect(void);
void* SLDisplayCurrentMode(void);
void* SLDisplayDefaultVisualBell(void);
void* SLDisplayDoesNotDim(void);
void* SLDisplayFade(void);
void* SLDisplayFadeOperationInProgress(void);
void* SLDisplayForceToGray(void);
void* SLDisplayGammaTableCapacity(void);
void* SLDisplayGetDrawingContext(void);
void* SLDisplayHideCursor(void);
void* SLDisplayIDToOpenGLDisplayMask(void);
void* SLDisplayIOServicePort(void);
void* SLDisplayIsActive(void);
void* SLDisplayIsAlwaysInMirrorSet(void);
void* SLDisplayIsAsleep(void);
void* SLDisplayIsBuiltin(void);
void* SLDisplayIsCaptured(void);
void* SLDisplayIsInHWMirrorSet(void);
void* SLDisplayIsInMirrorSet(void);
void* SLDisplayIsMain(void);
void* SLDisplayIsOnline(void);
void* SLDisplayIsStereo(void);
void* SLDisplayMirrorsDisplay(void);
void* SLDisplayModeCopyPixelEncoding(void);
void* SLDisplayModeCreate(void);
void* SLDisplayModeGetHeight(void);
void* SLDisplayModeGetIODisplayModeID(void);
void* SLDisplayModeGetIOFlags(void);
void* SLDisplayModeGetPixelDensity(void);
void* SLDisplayModeGetPixelHeight(void);
void* SLDisplayModeGetPixelWidth(void);
void* SLDisplayModeGetPixelsHigh(void);
void* SLDisplayModeGetPixelsWide(void);
void* SLDisplayModeGetRefreshRate(void);
void* SLDisplayModeGetResolution(void);
void* SLDisplayModeGetTypeID(void);
void* SLDisplayModeGetWidth(void);
void* SLDisplayModeIsUsableForDesktopGUI(void);
void* SLDisplayModeRelease(void);
void* SLDisplayModeRetain(void);
void* SLDisplayModelNumber(void);
void* SLDisplayMoveCursorToPoint(void);
void* SLDisplayPixelsHigh(void);
void* SLDisplayPixelsWide(void);
void* SLDisplayPrimaryDisplay(void);
void* SLDisplayRegisterReconfigurationCallback(void);
void* SLDisplayRelease(void);
void* SLDisplayRemoveReconfigurationCallback(void);
void* SLDisplayRestoreColorSyncSettings(void);
void* SLDisplayRotation(void);
void* SLDisplaySamplesPerPixel(void);
void* SLDisplayScreenSize(void);
void* SLDisplaySerialNumber(void);
void* SLDisplaySetDisplayMode(void);
void* SLDisplaySetInvertedPolarity(void);
void* SLDisplaySetPalette(void);
void* SLDisplaySetStereoOperation(void);
void* SLDisplayShowCursor(void);
void* SLDisplayStreamCreate(void);
void* SLDisplayStreamCreateWithDispatchQueue(void);
void* SLDisplayStreamGetRunLoopSource(void);
void* SLDisplayStreamGetTypeID(void);
void* SLDisplayStreamStart(void);
void* SLDisplayStreamStop(void);
void* SLDisplayStreamUpdateCreateMergedUpdate(void);
void* SLDisplayStreamUpdateGetDropCount(void);
void* SLDisplayStreamUpdateGetMovedRectsDelta(void);
void* SLDisplayStreamUpdateGetRects(void);
void* SLDisplayStreamUpdateGetTypeID(void);
void* SLDisplaySwitchToMode(void);
void* SLDisplayUnitNumber(void);
void* SLDisplayUsesForceToGray(void);
void* SLDisplayUsesInvertedPolarity(void);
void* SLDisplayUsesOpenGLAcceleration(void);
void* SLDisplayVendorNumber(void);
void* SLDisplayVisualBell(void);
void* SLDisplayWaitForBeamPositionOutsideLines(void);
void* SLEnableEventStateCombining(void);
void* SLEventCopyIOHIDEvent(void);
void* SLEventCopyNextEvent(void);
void* SLEventCreate(void);
void* SLEventCreateCopy(void);
void* SLEventCreateData(void);
void* SLEventCreateFromData(void);
void* SLEventCreateKeyboardEvent(void);
void* SLEventCreateMouseEvent(void);
void* SLEventCreateNextEvent(void);
void* SLEventCreateScrollWheelEvent(void);
void* SLEventCreateScrollWheelEvent2(void);
void* SLEventCreateSourceFromEvent(void);
void* SLEventCreateWithEventRecord(void);
void* SLEventGetDoubleValueField(void);
void* SLEventGetEventRecord(void);
void* SLEventGetFlags(void);
void* SLEventGetIntegerValueField(void);
void* SLEventGetLocation(void);
void* SLEventGetTimestamp(void);
void* SLEventGetType(void);
void* SLEventGetTypeID(void);
void* SLEventGetUnflippedLocation(void);
void* SLEventGetUnflippedWindowLocation(void);
void* SLEventGetWindowLocation(void);
void* SLEventKeyboardGetUnicodeString(void);
void* SLEventKeyboardSetUnicodeString(void);
void* SLEventPost(void);
void* SLEventPostEventToPSN(void);
void* SLEventPostToPSN(void);
void* SLEventPostToPid(void);
void* SLEventRecordPointer(void);
void* SLEventSetDoubleValueField(void);
void* SLEventSetFlags(void);
void* SLEventSetIOHIDEvent(void);
void* SLEventSetIntegerValueField(void);
void* SLEventSetLocation(void);
void* SLEventSetSource(void);
void* SLEventSetTimestamp(void);
void* SLEventSetType(void);
void* SLEventSetWindowLocation(void);
void* SLEventSourceButtonState(void);
void* SLEventSourceCounterForEventType(void);
void* SLEventSourceCreate(void);
void* SLEventSourceFlagsState(void);
void* SLEventSourceGetKeyboardType(void);
void* SLEventSourceGetLocalEventsFilterDuringSuppressionState(void);
void* SLEventSourceGetLocalEventsSuppressionInterval(void);
void* SLEventSourceGetPixelsPerLine(void);
void* SLEventSourceGetSourceStateID(void);
void* SLEventSourceGetTypeID(void);
void* SLEventSourceGetUserData(void);
void* SLEventSourceKeyState(void);
void* SLEventSourceSecondsSinceLastEventType(void);
void* SLEventSourceSetKeyboardType(void);
void* SLEventSourceSetLocalEventsFilterDuringSuppressionState(void);
void* SLEventSourceSetLocalEventsSuppressionInterval(void);
void* SLEventSourceSetPixelsPerLine(void);
void* SLEventSourceSetUserData(void);
void* SLEventTapCreate(void);
void* SLEventTapCreateForPSN(void);
void* SLEventTapCreateForPid(void);
void* SLEventTapEnable(void);
void* SLEventTapIDEnable(void);
void* SLEventTapIDIsEnabled(void);
void* SLEventTapIsEnabled(void);
void* SLEventTapPostEvent(void);
void* SLGetActiveDisplayList(void);
void* SLGetDisplayTransferByFormula(void);
void* SLGetDisplayTransferByTable(void);
void* SLGetDisplaysWithOpenGLDisplayMask(void);
void* SLGetDisplaysWithPoint(void);
void* SLGetDisplaysWithRect(void);
void* SLGetEventTapList(void);
void* SLGetLastMouseDelta(void);
void* SLGetOnlineDisplayList(void);
void* SLInhibitLocalEvents(void);
void* SLMainDisplayID(void);
void* SLOpenGLDisplayMaskToDisplayID(void);
void* SLPSBringNextToFront(void);
void* SLPSCompleteServiceReq(void);
void* SLPSCompleteServiceReqOnConnection(void);
void* SLPSDequeueServiceReq(void);
void* SLPSDequeueServiceReqOnConnection(void);
void* SLPSEnableForegroundOperation(void);
void* SLPSEqualProcess(void);
void* SLPSExitSpecialKeyMode(void);
void* SLPSFindProcessByDisplayName(void);
void* SLPSFindProcessByPID(void);
void* SLPSGetCurrentProcess(void);
void* SLPSGetFrontProcess(void);
void* SLPSGetKeyBinding(void);
void* SLPSGetKeyFocusProcess(void);
void* SLPSGetNextProcess(void);
void* SLPSGetNextToFrontProcess(void);
void* SLPSGetProcessInfo(void);
void* SLPSGetTypingFocusProcess(void);
void* SLPSGetWindowOwner(void);
void* SLPSGetWindowPresenter(void);
void* SLPSMarkChildWindow(void);
void* SLPSModifyConnectionNotifications(void);
void* SLPSOverrideKeyRegistration(void);
void* SLPSPBGetProcessInfo(void);
void* SLPSPostEventRecordTo(void);
void* SLPSPostHideMostReq(void);
void* SLPSPostHideReq(void);
void* SLPSPostShowReq(void);
void* SLPSProcessInformationCopyDictionary(void);
void* SLPSRegisterForKey(void);
void* SLPSRegisterForKeyOnConnection(void);
void* SLPSRegisterWithServer(void);
void* SLPSReleaseKeyFocus(void);
void* SLPSReleaseKeyFocusOnConnection(void);
void* SLPSReleaseKeyFocusWithID(void);
void* SLPSSetDefaultBootstrapPort(void);
void* SLPSSetFrontProcess(void);
void* SLPSSetFrontProcessWithOptions(void);
void* SLPSSetMainApplicationConnection(void);
void* SLPSSetNotifications(void);
void* SLPSSetProcessName(void);
void* SLPSSetProcessToBringForwardAtNextApplicationExit(void);
void* SLPSStealKeyFocus(void);
void* SLPSStealKeyFocusOnConnection(void);
void* SLPSStealKeyFocusReturningID(void);
void* SLPSUnoverrideKeyRegistration(void);
void* SLPaletteCreateCopy(void);
void* SLPaletteCreateDefaultColorPalette(void);
void* SLPaletteCreateFromPaletteBlendedWithColor(void);
void* SLPaletteCreateWithByteSamples(void);
void* SLPaletteCreateWithCapacity(void);
void* SLPaletteCreateWithDisplay(void);
void* SLPaletteCreateWithSamples(void);
void* SLPaletteGetColorAtIndex(void);
void* SLPaletteGetIndexForColor(void);
void* SLPaletteGetNumberOfSamples(void);
void* SLPaletteIsEqualToPalette(void);
void* SLPaletteRelease(void);
void* SLPaletteSetColorAtIndex(void);
void* SLPixelAccessCreate(void);
void* SLPixelAccessCreateImageFromRect(void);
void* SLPixelAccessCreateWithWindow(void);
void* SLPixelAccessGetAlphaBitsPerComponent(void);
void* SLPixelAccessGetAlphaBitsPerPixel(void);
void* SLPixelAccessGetAlphaData(void);
void* SLPixelAccessGetBitmapInfo(void);
void* SLPixelAccessGetBitsPerComponent(void);
void* SLPixelAccessGetBitsPerPixel(void);
void* SLPixelAccessGetColorSpace(void);
void* SLPixelAccessGetData(void);
void* SLPixelAccessGetHeight(void);
void* SLPixelAccessGetTransform(void);
void* SLPixelAccessGetTypeID(void);
void* SLPixelAccessGetWidth(void);
void* SLPixelAccessLock(void);
void* SLPixelAccessRect(void);
void* SLPixelAccessRelease(void);
void* SLPixelAccessTransformRect(void);
void* SLPixelAccessUnlock(void);
void* SLPostKeyboardEvent(void);
void* SLPostMouseEvent(void);
void* SLPostScrollWheelEvent(void);
void* SLPreflightListenEventAccess(void);
void* SLPreflightPostEventAccess(void);
void* SLPreflightScreenCaptureAccess(void);
void* SLRegisterScreenRefreshCallback(void);
void* SLReleaseAllDisplays(void);
void* SLReleaseDisplayFadeReservation(void);
void* SLReleaseScreenRefreshRects(void);
void* SLRequestListenEventAccess(void);
void* SLRequestPostEventAccess(void);
void* SLRequestScreenCaptureAccess(void);
void* SLRestorePermanentDisplayConfiguration(void);
void* SLSAAHSetAppearanceTheme(void);
void* SLSAcceleratorForDisplayAlias(void);
void* SLSAcceleratorForDisplayNumber(void);
void* SLSAccessWindowBackingStore(void);
void* SLSActuateDeviceWithPattern(void);
void* SLSAddActivationRegion(void);
void* SLSAddButtonRegionInWindow(void);
void* SLSAddDragRegion(void);
void* SLSAddDragRegionInWindow(void);
void* SLSAddStructuralRegion(void);
void* SLSAddSurface(void);
void* SLSAddTrackingArea(void);
void* SLSAddTrackingAreas(void);
void* SLSAddTrackingRect(void);
void* SLSAddTrackingRegion(void);
void* SLSAddWindowFilter(void);
void* SLSAddWindowToWindowMovementGroup(void);
void* SLSAddWindowToWindowOrderingGroup(void);
void* SLSAddWindowsToSpaces(void);
void* SLSAdjustSystemStatusBarWindows(void);
void* SLSAreEventsCaptured(void);
void* SLSAreEventsCapturedReturningMask(void);
void* SLSAssociateMouseAndMouseCursorPosition(void);
void* SLSBeginDisplayConfiguration(void);
void* SLSBindSurface(void);
void* SLSBlockWindowOrdering(void);
void* SLSBluishYellow(void);
void* SLSBoundsEqualToBounds(void);
void* SLSBoundsIntersection(void);
void* SLSBoundsUnion(void);
void* SLSBringAirDisplayOffline(void);
void* SLSBringAirDisplayOnline(void);
void* SLSCanCoalesceEvents(void);
void* SLSCancelDisplayConfiguration(void);
void* SLSCaptureDisplay(void);
void* SLSCaptureWindowsContentsToRect(void);
void* SLSCaptureWindowsContentsToRectWithOptions(void);
void* SLSClearActivationRegion(void);
void* SLSClearButtonRegionInWindow(void);
void* SLSClearDragRegion(void);
void* SLSClearEvent(void);
void* SLSClearEventOfLength(void);
void* SLSClearWindowListTags(void);
void* SLSClearWindowMovementGroup(void);
void* SLSClearWindowOrderingGroup(void);
void* SLSClearWindowTags(void);
void* SLSCoalesceEvents(void);
void* SLSCoalesceEventsInMask(void);
void* SLSCompleteDisplayConfiguration(void);
void* SLSCompleteDisplayConfigurationWithOption(void);
void* SLSCompleteWindowRightsGrant(void);
void* SLSConfigureDisplayEnabled(void);
void* SLSConfigureDisplayFadeEffect(void);
void* SLSConfigureDisplayMirrorOfDisplay(void);
void* SLSConfigureDisplayMirrored(void);
void* SLSConfigureDisplayMode(void);
void* SLSConfigureDisplayOrigin(void);
void* SLSConfigureDisplayResolution(void);
void* SLSConfigureDisplayStereoOperation(void);
void* SLSConnectionDispatchNotificationsToMainQueueIfNotMainThread(void);
void* SLSConnectionGetHeldWindowRights(void);
void* SLSConnectionGetPID(void);
void* SLSConnectionGetPIDAndVersion(void);
void* SLSConnectionRelinquishWindowRights(void);
void* SLSConnectionSetSpinning(void);
void* SLSCopyActiveMenuBarDisplayIdentifier(void);
void* SLSCopyAllSessionPropertiesTemporaryBridge(void);
void* SLSCopyAssociatedWindows(void);
void* SLSCopyAvailableHMDList(void);
void* SLSCopyBestManagedDisplayForPoint(void);
void* SLSCopyBestManagedDisplayForRect(void);
void* SLSCopyConnectionProperty(void);
void* SLSCopyCoordinatedDistributedNotificationContinuationBlock(void);
void* SLSCopyCurrentSessionDictionary(void);
void* SLSCopyDevicesDictionary(void);
void* SLSCopyDisplayColorSpace(void);
void* SLSCopyDisplayInfoDictionary(void);
void* SLSCopyDisplayModePixelEncoding(void);
void* SLSCopyDisplayRegion(void);
void* SLSCopyDisplayUUID(void);
void* SLSCopyManagedDisplayForSpace(void);
void* SLSCopyManagedDisplayForWindow(void);
void* SLSCopyManagedDisplaySpaces(void);
void* SLSCopyManagedDisplays(void);
void* SLSCopyPackagesPersistenceDictionary(void);
void* SLSCopyRegisteredCursorImages(void);
void* SLSCopySessionList(void);
void* SLSCopySessionPropertiesTemporaryBridge(void);
void* SLSCopySpaces(void);
void* SLSCopySpacesForWindows(void);
void* SLSCopySpecifiedWindowShape(void);
void* SLSCopySurfaceColorSpace(void);
void* SLSCopyWindowAlphaShape(void);
void* SLSCopyWindowClipShape(void);
void* SLSCopyWindowColorSpace(void);
void* SLSCopyWindowGroup(void);
void* SLSCopyWindowProperty(void);
void* SLSCopyWindowRoutingRecordsForScreenLocation(void);
void* SLSCopyWindowShape(void);
void* SLSCopyWindowsWithOptionsAndTags(void);
void* SLSCopyWindowsWithOptionsAndTagsAndSpaceOptions(void);
void* SLSCosmeticShieldCursor(void);
void* SLSCreateCinematicBootWindowArray(void);
void* SLSCreateDefaultMetalDevice(void);
void* SLSCreateGenieWindowAnimation(void);
void* SLSCreateKeyboardEvent(void);
void* SLSCreateKeyboardEventOfLength(void);
void* SLSCreateLayerContext(void);
void* SLSCreateLoginSession(void);
void* SLSCreateLoginSessionWithDataAndVisibility(void);
void* SLSCreateMetalSheetWindowAnimationWithParent(void);
void* SLSCreateMetalSheetWindowAnimationWithParentAndShift(void);
void* SLSCreateRegisteredCursorImage(void);
void* SLSCreateSession(void);
void* SLSCreateSessionTemporaryBridge(void);
void* SLSCreateSessionWithDataAndOptions(void);
void* SLSCreateSessionWithDataAndVisibility(void);
void* SLSCreateShadowCacheDebugInfo(void);
void* SLSCreateShadowGroup(void);
void* SLSCreateSheetWindowAnimation(void);
void* SLSCreateSheetWindowAnimationWithParent(void);
void* SLSCreateWindowDebugInfo(void);
void* SLSCurrentCursorSeed(void);
void* SLSCurrentEventFlags(void);
void* SLSCurrentEventMask(void);
void* SLSCurrentEventTimestamp(void);
void* SLSCurrentInputPointerPosition(void);
void* SLSCurrentKeyboardEventSeed(void);
void* SLSCurrentRealTime(void);
void* SLSCursorNameForSystemCursor(void);
void* SLSCycleWindows(void);
void* SLSDFRAgentRegister(void);
void* SLSDFRCopyProperties(void);
void* SLSDFRDisplayStreamCreate(void);
void* SLSDFRSetDimmingStep(void);
void* SLSDFRSetPreferences(void);
void* SLSDeactivateCurrContext(void);
void* SLSDefaultConnectionForThread(void);
void* SLSDefaultKeyboardID(void);
void* SLSDeferWindowMoveEvents(void);
void* SLSDeferredUpdates(void);
void* SLSDetectDisplays(void);
void* SLSDeviceCopyColorSpace(void);
void* SLSDeviceCreate(void);
void* SLSDeviceDestroy(void);
void* SLSDeviceFinish(void);
void* SLSDeviceGetGeometry(void);
void* SLSDeviceGetProfile(void);
void* SLSDeviceGetResolution(void);
void* SLSDeviceInvalidate(void);
void* SLSDeviceLock(void);
void* SLSDeviceScroll(void);
void* SLSDeviceSynchronize(void);
void* SLSDeviceUnlock(void);
void* SLSDisableCursorObscure(void);
void* SLSDisableDisableUpdate(void);
void* SLSDisableUpdate(void);
void* SLSDisableUpdateToken(void);
void* SLSDisplayChangedSeed(void);
void* SLSDisplayConfigurationOrigin(void);
void* SLSDisplayCopyCurrentMetalDevice(void);
void* SLSDisplayGetRefreshTiming(void);
void* SLSDisplayLoadUserPreferences(void);
void* SLSDisplayMappingChangedSeed(void);
void* SLSDisplayMuxAcquired(void);
void* SLSDisplayMuxReleased(void);
void* SLSDisplayRegisterReconfigurationCallbackWithUUID(void);
void* SLSDisplayStatusQuery(void);
void* SLSDisplayStreamCreateCustom(void);
void* SLSDisplayStreamSidecarTouchBar(void);
void* SLSDisplayStreamUpdateCreate(void);
void* SLSDisplaySystemStateSeed(void);
void* SLSDoDeferredOrdering(void);
void* SLSDragWindowRelativeToMouse(void);
void* SLSEnableAmbientDisplay(void);
void* SLSEnableDeferredUpdateNotifications(void);
void* SLSEnableHDR(void);
void* SLSEnsureSpaceSwitchToActiveProcess(void);
void* SLSEventAppUnresponsiveStatus(void);
void* SLSEventCounter(void);
void* SLSEventFlagForVirtualKeyCode(void);
void* SLSEventIsAppUnresponsive(void);
void* SLSEventPostEventToPSN(void);
void* SLSEventRecordGetContextID(void);
void* SLSEventRecordGetContextOrigin(void);
void* SLSEventRecordGetDFRTouchTimestamp(void);
void* SLSEventRecordGetStagePressure(void);
void* SLSEventRecordGetTransitionProgress(void);
void* SLSEventRecordGetUnacceleratedPointerMoveX(void);
void* SLSEventRecordGetUnacceleratedPointerMoveY(void);
void* SLSEventRecordGetUnmodifiedTimestamp(void);
void* SLSEventRecordLength(void);
void* SLSEventRecordSetContextID(void);
void* SLSEventRecordSetContextOrigin(void);
void* SLSEventRecordSetDFRTouchTimestamp(void);
void* SLSEventRecordSetUnacceleratedPointerMoveX(void);
void* SLSEventRecordSetUnacceleratedPointerMoveY(void);
void* SLSEventRecordSetUnmodifiedTimestamp(void);
void* SLSEventRecordTimeFromRealTimeStamp(void);
void* SLSEventSetAppIsUnresponsiveNotificationTimeout(void);
void* SLSEventTapCreate(void);
void* SLSExtractEventRecordsFromMessage(void);
void* SLSFindSessionAuditSessionID(void);
void* SLSFindWindow(void);
void* SLSFindWindowAndOwner(void);
void* SLSFindWindowByGeometry(void);
void* SLSFlushSurface(void);
void* SLSFlushSurfaceWithOptions(void);
void* SLSFlushSurfaceWithOptionsAndIndex(void);
void* SLSFlushWindow(void);
void* SLSFlushWindowContentRegion(void);
void* SLSForceShowCursor(void);
void* SLSForceWaitCursorActive(void);
void* SLSGLCompositorSettings(void);
void* SLSGeometrySeed(void);
void* SLSGetActivationRegionLegacy(void);
void* SLSGetActiveDisplayList(void);
void* SLSGetActiveMenuBarDrawingStyle(void);
void* SLSGetActiveSpace(void);
void* SLSGetAppearanceThemeLegacy(void);
void* SLSGetAppearanceThemeSwitchesAutomatically(void);
void* SLSGetBackgroundEventMask(void);
void* SLSGetButtonRegionLegacy(void);
void* SLSGetCAMetalDevice(void);
void* SLSGetCatenatedWindowTransform(void);
void* SLSGetCoalesceEventsMask(void);
void* SLSGetConnectionIDForPSN(void);
void* SLSGetConnectionPSN(void);
void* SLSGetCurrentCursorLocation(void);
void* SLSGetCurrentDisplayMode(void);
void* SLSGetCurrentMouseButtonState(void);
void* SLSGetCursorData(void);
void* SLSGetCursorDataSize(void);
void* SLSGetCursorScale(void);
void* SLSGetDebugOptions(void);
void* SLSGetDenyWindowServerConnections(void);
void* SLSGetDisplayAddress(void);
void* SLSGetDisplayAliasList(void);
void* SLSGetDisplayBaseAddress(void);
void* SLSGetDisplayBounds(void);
void* SLSGetDisplayBrightness(void);
void* SLSGetDisplayDepth(void);
void* SLSGetDisplayForUUID(void);
void* SLSGetDisplayHardwareBounds(void);
void* SLSGetDisplayList(void);
void* SLSGetDisplayMaxOpenGLSurfaceSize(void);
void* SLSGetDisplayMaximumHDRValue(void);
void* SLSGetDisplayModeDescription(void);
void* SLSGetDisplayModeDescriptionOfLength(void);
void* SLSGetDisplayModeDescriptionsOfLength(void);
void* SLSGetDisplayOpenGLDisplayAliasMask(void);
void* SLSGetDisplayOpenGLDisplayMask(void);
void* SLSGetDisplayPixelEncodingOfLength(void);
void* SLSGetDisplayPixelFormat(void);
void* SLSGetDisplayReconfigureTimeWhenWindowsLastMoved(void);
void* SLSGetDisplayRowBytes(void);
void* SLSGetDisplayTransfer(void);
void* SLSGetDisplayTransferByFormula(void);
void* SLSGetDisplayTransferByTable(void);
void* SLSGetDisplaysWithOpenGLDisplayMask(void);
void* SLSGetDisplaysWithPoint(void);
void* SLSGetDisplaysWithRect(void);
void* SLSGetDisplaysWithUUID(void);
void* SLSGetDockRectWithOrientation(void);
void* SLSGetDockRectWithReason(void);
void* SLSGetDragRegionLegacy(void);
void* SLSGetEligiblePerAppDisplayList(void);
void* SLSGetEventPort(void);
void* SLSGetEventTapList(void);
void* SLSGetEventTapTimeout(void);
void* SLSGetGestureEventSubmask(void);
void* SLSGetGlobalCursorData(void);
void* SLSGetGlobalCursorDataSize(void);
void* SLSGetGlobalHotKeyOperatingMode(void);
void* SLSGetHIDEventRecord(void);
void* SLSGetHotButton(void);
void* SLSGetHotKey(void);
void* SLSGetHotKeyRepresentation(void);
void* SLSGetHotKeyType(void);
void* SLSGetHotModifier(void);
void* SLSGetInkingState(void);
void* SLSGetKeys(void);
void* SLSGetLoginName(void);
void* SLSGetMagicZoomState(void);
void* SLSGetMagicZoomWindowID(void);
void* SLSGetMenuBar(void);
void* SLSGetMenuBarAutohideEnabled(void);
void* SLSGetMenuBarDrawingStyle(void);
void* SLSGetMenuBarUsesRTLLayoutOnDisplayLegacy(void);
void* SLSGetMenuBarVisibilityOverrideOnDisplay(void);
void* SLSGetNextEventRecord(void);
void* SLSGetNextEventRecordFromMessage(void);
void* SLSGetNumberOfDisplayModes(void);
void* SLSGetNumberOfDisplays(void);
void* SLSGetOnScreenWindowCount(void);
void* SLSGetOnScreenWindowList(void);
void* SLSGetOnlineDisplayList(void);
void* SLSGetOnscreenWindowBounds(void);
void* SLSGetParentWindowList(void);
void* SLSGetPerformanceData(void);
void* SLSGetPerformanceTotalUpdateCount(void);
void* SLSGetPerformanceTotalUpdateHistogram(void);
void* SLSGetPerformanceUpdateCountPerDisplay(void);
void* SLSGetPotentiallyActiveDisplayList(void);
void* SLSGetProcessMenuBarWindowList(void);
void* SLSGetProcessValidity(void);
void* SLSGetRealtimeDisplayInfoShmem(void);
void* SLSGetRegisteredCursorData(void);
void* SLSGetRegisteredCursorData2(void);
void* SLSGetRegisteredCursorDataSize(void);
void* SLSGetRevealedMenuBarBounds(void);
void* SLSGetScreenRectForWindow(void);
void* SLSGetSharedWindow(void);
void* SLSGetSizeOfDisplayTransfer(void);
void* SLSGetSpaceManagementMode(void);
void* SLSGetSpaceMenuBarReveal(void);
void* SLSGetSpacePermittedResizeDirections(void);
void* SLSGetSpecialCommandRegionLegacy(void);
void* SLSGetSurfaceBinding(void);
void* SLSGetSurfaceBounds(void);
void* SLSGetSurfaceCount(void);
void* SLSGetSurfaceFrontBufferID(void);
void* SLSGetSurfaceList(void);
void* SLSGetSurfaceOpacity(void);
void* SLSGetSurfaceResolution(void);
void* SLSGetSymbolicHotKeyButtonValue(void);
void* SLSGetSymbolicHotKeyRepresentation(void);
void* SLSGetSymbolicHotKeyRepresentationList(void);
void* SLSGetSymbolicHotKeyValue(void);
void* SLSGetSymbolicHotKeyValuesAndStates(void);
void* SLSGetSymbolicHotModifierValue(void);
void* SLSGetSystemBackgroundWindow(void);
void* SLSGetSystemDefinedCursorData(void);
void* SLSGetSystemDefinedCursorDataSize(void);
void* SLSGetSystemUIHasRTLDirectionLegacy(void);
void* SLSGetSystemWindow(void);
void* SLSGetTileSpaceDividerDirections(void);
void* SLSGetUnflippedEventLocation(void);
void* SLSGetUnflippedWindowEventLocation(void);
void* SLSGetUpdateClientPipe(void);
void* SLSGetWindowAccelerationCapability(void);
void* SLSGetWindowAlpha(void);
void* SLSGetWindowAutofill(void);
void* SLSGetWindowBounds(void);
void* SLSGetWindowCount(void);
void* SLSGetWindowDepth(void);
void* SLSGetWindowEventMask(void);
void* SLSGetWindowEventReceiver(void);
void* SLSGetWindowFlushSeed(void);
void* SLSGetWindowFrameBounds(void);
void* SLSGetWindowGeometry(void);
void* SLSGetWindowLayerContext(void);
void* SLSGetWindowLevel(void);
void* SLSGetWindowList(void);
void* SLSGetWindowListWithTags(void);
void* SLSGetWindowMouseLocation(void);
void* SLSGetWindowOpacity(void);
void* SLSGetWindowOwner(void);
void* SLSGetWindowPresenter(void);
void* SLSGetWindowResizeState(void);
void* SLSGetWindowResolution(void);
void* SLSGetWindowShadowAndRimParameters(void);
void* SLSGetWindowSharingState(void);
void* SLSGetWindowSize(void);
void* SLSGetWindowSubLevel(void);
void* SLSGetWindowTags(void);
void* SLSGetWindowTransform(void);
void* SLSGetWindowTransformAtPlacement(void);
void* SLSGetWindowType(void);
void* SLSGetWindowWorkspace(void);
void* SLSGetWindowWorkspaceIgnoringVisibility(void);
void* SLSGetWorkspace(void);
void* SLSGetWorkspaceWindowCountWithOptionsAndTags(void);
void* SLSGetWorkspaceWindowGroup(void);
void* SLSGetWorkspaceWindowListWithOptionsAndTags(void);
void* SLSGetZoomDisplay(void);
void* SLSGetZoomParameters(void);
void* SLSGrantWindowRightsReservingWithTimeoutAndToken(void);
void* SLSHIDEventRecordReplay(void);
void* SLSHMDAcquire(void);
void* SLSHMDAddNotificationHandler(void);
void* SLSHMDConfigureDisplayQueue(void);
void* SLSHMDCopyAudioSelector(void);
void* SLSHMDCopyCapabilities(void);
void* SLSHMDCopyDisplayInfoDictionary(void);
void* SLSHMDCopyDisplayQueueConfiguration(void);
void* SLSHMDCopyMetalDevice(void);
void* SLSHMDDrawableGetIOSurface(void);
void* SLSHMDDrawablePresentWithTime(void);
void* SLSHMDGetAcceleratorPort(void);
void* SLSHMDGetDrawable(void);
void* SLSHMDGetRefreshTiming(void);
void* SLSHMDGetTotalUpdateCount(void);
void* SLSHMDIsAvailable(void);
void* SLSHMDIsAwake(void);
void* SLSHMDRelinquish(void);
void* SLSHMDRemoveNotificationHandler(void);
void* SLSHWCaptureDesktop(void);
void* SLSHWCaptureDisplayIntoIOSurface(void);
void* SLSHWCaptureDisplayIntoIOSurfaceWithOptions(void);
void* SLSHWCaptureProcessWindowsInSpaceIncludeDesktop(void);
void* SLSHWCaptureSpace(void);
void* SLSHWCaptureStreamCreateWithWindow(void);
void* SLSHWCaptureWindowList(void);
void* SLSHWCaptureWindowListInRect(void);
void* SLSHardwareCursorActive(void);
void* SLSHideCursor(void);
void* SLSHideSpaces(void);
void* SLSInhibitLocalEvents(void);
void* SLSInitCursor(void);
void* SLSInitialEnableOfDisplayUpdates(void);
void* SLSInitialize(void);
void* SLSInitializeGamma(void);
void* SLSInputButtonState(void);
void* SLSInputKeyState(void);
void* SLSInputModifierKeyState(void);
void* SLSInstallRemoteContextNotificationHandler(void);
void* SLSInterruptMenuBarReveal(void);
void* SLSInvalidateGroupedWindowShadow(void);
void* SLSInvalidateWindowShadow(void);
void* SLSInvokeTransition(void);
void* SLSIsAccessibilityDisplay(void);
void* SLSIsAmbientDisplayEnabled(void);
void* SLSIsDisplayChangedSeedValid(void);
void* SLSIsHDREnabled(void);
void* SLSIsHDRSupported(void);
void* SLSIsHotKeyEnabled(void);
void* SLSIsMenuBarVisibleOnSpace(void);
void* SLSIsScreenWatcherPresent(void);
void* SLSIsSecureEventInputSet(void);
void* SLSIsSymbolicHotKeyEnabled(void);
void* SLSIsSymbolicHotKeyEnabledForConnection(void);
void* SLSIsZoomDisplay(void);
void* SLSIsZoomed(void);
void* SLSKeyEventUpdateCharacterTranslation(void);
void* SLSKitVersion(void);
void* SLSLockWindowBackingStore(void);
void* SLSLockWindowBits(void);
void* SLSLockWindowRectBits(void);
void* SLSLockWindowVisibleRegion(void);
void* SLSMachineSupportsLowPowerVideo(void);
void* SLSMainConnectionID(void);
void* SLSMainDisplayBoundsIgnoringCapture(void);
void* SLSMainDisplayID(void);
void* SLSManagedDisplayCurrentSpaceAllowsWindow(void);
void* SLSManagedDisplayGetCurrentSpace(void);
void* SLSManagedDisplayIsAnimating(void);
void* SLSManagedDisplayIteratorAdvance(void);
void* SLSManagedDisplayIteratorCopyManagedSpaces(void);
void* SLSManagedDisplayIteratorCopyRoleWindows(void);
void* SLSManagedDisplayIteratorGetAttributes(void);
void* SLSManagedDisplayIteratorGetBounds(void);
void* SLSManagedDisplayIteratorGetCount(void);
void* SLSManagedDisplayIteratorGetTypeID(void);
void* SLSManagedDisplayIteratorGetUUIDBytes(void);
void* SLSManagedDisplaySetCurrentSpace(void);
void* SLSManagedDisplaySetIsAnimating(void);
void* SLSManagedDisplaySetRoleWindow(void);
void* SLSManagedDisplaysCopyRoleWindows(void);
void* SLSManagedDisplaysGetRoleWindows(void);
void* SLSMenuBarExists(void);
void* SLSMenuBarHideShowRecordGetAnimationDuration(void);
void* SLSMenuBarHideShowRecordGetAnimationStartTime(void);
void* SLSMenuBarHideShowRecordGetSpaceID(void);
void* SLSMoveManagedSpaceToDisplayIndex(void);
void* SLSMoveSessionToConsoleTemporaryBridge(void);
void* SLSMoveSurface(void);
void* SLSMoveTrackingArea(void);
void* SLSMoveWindow(void);
void* SLSMoveWindowList(void);
void* SLSMoveWindowListOnMatchingDisplayChangedSeed(void);
void* SLSMoveWindowOnMatchingDisplayChangedSeed(void);
void* SLSMoveWindowWithGroup(void);
void* SLSMoveWindowsToManagedSpace(void);
void* SLSMoveWorkspaceWindowList(void);
void* SLSMoveWorkspaceWindowListWithOptions(void);
void* SLSNewCIFilter(void);
void* SLSNewCIFilterByName(void);
void* SLSNewConnection(void);
void* SLSNewTransition(void);
void* SLSNewWindow(void);
void* SLSNewWindowWithOpaqueShape(void);
void* SLSObscureCursor(void);
void* SLSOrderFrontConditionally(void);
void* SLSOrderPanelIfActive(void);
void* SLSOrderSurface(void);
void* SLSOrderWindow(void);
void* SLSOrderWindowList(void);
void* SLSOrderWindowListWithGroups(void);
void* SLSOrderWindowListWithOperation(void);
void* SLSOrderWindowWithGroup(void);
void* SLSOverrideAppSleepNotifications(void);
void* SLSPackagesAddWindowToDraggingSpace(void);
void* SLSPackagesAssignDraggedWindowToDestinationSpace(void);
void* SLSPackagesCopyWorkspaceIdentifierForWorkspace(void);
void* SLSPackagesDisableFindCursor(void);
void* SLSPackagesDragWindowRelativeToMouse(void);
void* SLSPackagesEnableConnectionOcclusionNotifications(void);
void* SLSPackagesEnableConnectionWindowModificationNotifications(void);
void* SLSPackagesEnableWindowOcclusionNotifications(void);
void* SLSPackagesFindCursorIsDisabled(void);
void* SLSPackagesGetWindowConstraints(void);
void* SLSPackagesGetWorkspaceForWorkspaceIdentifier(void);
void* SLSPackagesInitializeSessionPreferences(void);
void* SLSPackagesRemoveWindowDragTransform(void);
void* SLSPackagesRemoveWindowFromDraggingSpace(void);
void* SLSPackagesSetFindCursorPrefs(void);
void* SLSPackagesSetWindowConstraints(void);
void* SLSPackagesSetWindowDragTransform(void);
void* SLSPersistenceAnnounceAllAppsReady(void);
void* SLSPersistenceRegisterAsReady(void);
void* SLSPersistenceSaveSpaceConfiguration(void);
void* SLSPersistenceWillLaunchASNsWithCompletionHandler(void);
void* SLSPersistenceWillTerminateSession(void);
void* SLSPostBroadcastNotification(void);
void* SLSPostCoordinatedDistributedNotification(void);
void* SLSPostEvent(void);
void* SLSPostEventRecord(void);
void* SLSPostKeyboardEvent(void);
void* SLSPostMouseEvent(void);
void* SLSPostMouseEvents(void);
void* SLSPostNotificationToConnection(void);
void* SLSPreflightListenEventAccess(void);
void* SLSPreflightPostEventAccess(void);
void* SLSPreflightScreenCaptureAccess(void);
void* SLSProcessAssignToAllSpaces(void);
void* SLSProcessAssignToSpace(void);
void* SLSRealTimeStampFromEventRecordTime(void);
void* SLSReassociateWindowsSpacesByGeometry(void);
void* SLSReenableCursorObscure(void);
void* SLSReenableDisableUpdate(void);
void* SLSReenableUpdate(void);
void* SLSReenableUpdateToken(void);
void* SLSReenableUpdateTokenWithSeed(void);
void* SLSRegisterColorSpaceFromICCData(void);
void* SLSRegisterConnectionNotifyProc(void);
void* SLSRegisterCursorWithData(void);
void* SLSRegisterCursorWithImage(void);
void* SLSRegisterCursorWithImages(void);
void* SLSRegisterNotifyProc(void);
void* SLSRegisterUpdateInformationHandler(void);
void* SLSReleaseCIFilter(void);
void* SLSReleaseConnection(void);
void* SLSReleaseSession(void);
void* SLSReleaseSessionTemporaryBridge(void);
void* SLSReleaseTransition(void);
void* SLSReleaseWindow(void);
void* SLSReleaseWindowAnimation(void);
void* SLSReleaseWindowList(void);
void* SLSRemoteContextAddNativeSpaceTrackingRegion(void);
void* SLSRemoteContextAddStructuralRegion(void);
void* SLSRemoteContextAddTrackingRegion(void);
void* SLSRemoveAllSurfaces(void);
void* SLSRemoveAllTrackingAreas(void);
void* SLSRemoveConnectionNotifyProc(void);
void* SLSRemoveDragSubregionForCommandModifier(void);
void* SLSRemoveDragSubregionInWindow(void);
void* SLSRemoveFromOrderingGroup(void);
void* SLSRemoveHotKey(void);
void* SLSRemoveNotifyProc(void);
void* SLSRemoveRegisteredCursor(void);
void* SLSRemoveRemoteContextNotificationHandler(void);
void* SLSRemoveStructuralRegion(void);
void* SLSRemoveSurface(void);
void* SLSRemoveTrackingArea(void);
void* SLSRemoveTrackingAreas(void);
void* SLSRemoveWindowFilter(void);
void* SLSRemoveWindowFromWindowMovementGroup(void);
void* SLSRemoveWindowsFromSpaces(void);
void* SLSReorderWindows(void);
void* SLSRequestListenEventAccess(void);
void* SLSRequestNotificationsForWindows(void);
void* SLSRequestPostEventAccess(void);
void* SLSRequestScreenCaptureAccess(void);
void* SLSResetMenuBarSystemOverrideAlphas(void);
void* SLSResetWindows(void);
void* SLSRestorePackagesManagementPersistenceData(void);
void* SLSRevealCursor(void);
void* SLSRunningOnInstallerDisk(void);
void* SLSSaveConfiguration(void);
void* SLSSavePerUserConfigurationData(void);
void* SLSScreenTimeSuppressWindows(void);
void* SLSSecondsSinceLastInputEvent(void);
void* SLSSecondsSinceMostRecentEventInMask(void);
void* SLSServerHasValidConnections(void);
void* SLSServerIsConnected(void);
void* SLSServerMightHaveAcceleration(void);
void* SLSServerOperationState(void);
void* SLSServerPort(void);
void* SLSServiceForDisplayAlias(void);
void* SLSServiceForDisplayNumber(void);
void* SLSSessionCopyAllSessionProperties(void);
void* SLSSessionCopyCurrentSessionProperties(void);
void* SLSSessionCopyCurrentSessionReadOnceData(void);
void* SLSSessionCreateLoginSessionID(void);
void* SLSSessionCreateSessionIDWithOptions(void);
void* SLSSessionFullScreenAppPid(void);
void* SLSSessionHasExcludeShapes(void);
void* SLSSessionIDGetFullScreenAppPid(void);
void* SLSSessionIDSetScreenLockWindowID(void);
void* SLSSessionIDSetSleepWindowID(void);
void* SLSSessionReleaseSessionID(void);
void* SLSSessionSetApplicationBindingsForWorkspaces(void);
void* SLSSessionSetCurrentSessionProperties(void);
void* SLSSessionSetCurrentSessionWorkspaceApplicationBindings(void);
void* SLSSessionSetCurrentSessionWorkspaceLaunchPath(void);
void* SLSSessionSetCurrentSessionWorkspaceNotificationConnectionID(void);
void* SLSSessionSetCurrentSessionWorkspacePreferences(void);
void* SLSSessionSetNotificationConnectionForWorkspaces(void);
void* SLSSessionSetPreferencesForWorkspaces(void);
void* SLSSessionSwitchToAuditSessionID(void);
void* SLSSessionSwitchToAuditSessionIDWithOptions(void);
void* SLSSessionSwitchToSessionID(void);
void* SLSSetAccessibilityAdjustments(void);
void* SLSSetActiveMenuBarDisplayIdentifier(void);
void* SLSSetAppearanceThemeLegacy(void);
void* SLSSetAppearanceThemeNotifying(void);
void* SLSSetAppearanceThemeSwitchesAutomatically(void);
void* SLSSetAvoidsActivation(void);
void* SLSSetBackgroundEventMask(void);
void* SLSSetBackgroundEventMaskAndShape(void);
void* SLSSetCIFilterValues(void);
void* SLSSetCIFilterValuesFromDictionary(void);
void* SLSSetChameleonOverrideColor(void);
void* SLSSetConnectionProperty(void);
void* SLSSetCursorDragLock(void);
void* SLSSetCursorFromData(void);
void* SLSSetCursorFromPremultipliedDataWithSeed(void);
void* SLSSetCursorRegionLock(void);
void* SLSSetCursorScale(void);
void* SLSSetDebugOptions(void);
void* SLSSetDebugOptionsData(void);
void* SLSSetDebugOptionsPSN(void);
void* SLSSetDebugOptionsWithDataObtainingPort(void);
void* SLSSetDebugOptionsWithDataObtainingResult(void);
void* SLSSetDefaultSpace(void);
void* SLSSetDeferActivation(void);
void* SLSSetDeferOrdering(void);
void* SLSSetDeferredUpdateNotificationPort(void);
void* SLSSetDenyWindowServerConnections(void);
void* SLSSetDictionaryForCurrentSession(void);
void* SLSSetDisplayAcceleratorBoost(void);
void* SLSSetDisplayBrightness(void);
void* SLSSetDisplayColorSpace(void);
void* SLSSetDisplayColorSpaceAndTransfer(void);
void* SLSSetDisplayContrast(void);
void* SLSSetDisplayIntention(void);
void* SLSSetDisplayIntentionWiper(void);
void* SLSSetDisplayOption(void);
void* SLSSetDisplayRotation(void);
void* SLSSetDisplayTransfer(void);
void* SLSSetDisplayTransferByFormula(void);
void* SLSSetDisplayTransferByFormulaWithOption(void);
void* SLSSetDisplayTransferByTable(void);
void* SLSSetDisplayTransferByTableWithOption(void);
void* SLSSetDockCursorOverride(void);
void* SLSSetDockRectWithOrientation(void);
void* SLSSetDockRectWithReason(void);
void* SLSSetEventCapture(void);
void* SLSSetEventCaptureWindowAndMask(void);
void* SLSSetEventMask(void);
void* SLSSetEventTapOption(void);
void* SLSSetEventTapTimeout(void);
void* SLSSetFrontWindow(void);
void* SLSSetGestureEventSubmask(void);
void* SLSSetGlobalForceConfig(void);
void* SLSSetGlobalHotKeyOperatingMode(void);
void* SLSSetHideOnDeact(void);
void* SLSSetHotButtonWithExclusion(void);
void* SLSSetHotKey(void);
void* SLSSetHotKeyEnabled(void);
void* SLSSetHotKeyRepresentation(void);
void* SLSSetHotKeyRepresentationWithOptions(void);
void* SLSSetHotKeyType(void);
void* SLSSetHotKeyWithExclusion(void);
void* SLSSetHotKeyWithOptions(void);
void* SLSSetHotModifierWithExclusion(void);
void* SLSSetHotModifierWithOptions(void);
void* SLSSetIOHIDEventSystemClientProperty(void);
void* SLSSetIgnoreAsFrontWindow(void);
void* SLSSetIgnoresCycle(void);
void* SLSSetIgnoresOption(void);
void* SLSSetInkingState(void);
void* SLSSetKeyTranslationTableFromPtr(void);
void* SLSSetKitVersion(void);
void* SLSSetLocalEventsSuppressionInterval(void);
void* SLSSetLoginName(void);
void* SLSSetLoginwindowConnection(void);
void* SLSSetMagicMirrorProperties(void);
void* SLSSetMagicZoom(void);
void* SLSSetMenuBar(void);
void* SLSSetMenuBarAutohideEnabled(void);
void* SLSSetMenuBarBounds(void);
void* SLSSetMenuBarCompanionWindow(void);
void* SLSSetMenuBarDrawingStyle(void);
void* SLSSetMenuBarInsetAndAlpha(void);
void* SLSSetMenuBarSystemOverrideAlpha(void);
void* SLSSetMenuBarVisibilityOverrideOnDisplay(void);
void* SLSSetMenuBars(void);
void* SLSSetMouseEventEnableFlags(void);
void* SLSSetMouseFocusWindow(void);
void* SLSSetOtherUniversalConnection(void);
void* SLSSetPerUserConfigurationData(void);
void* SLSSetPostProcessColorMatrix(void);
void* SLSSetPressureConfigurationOverride(void);
void* SLSSetPreventsActivation(void);
void* SLSSetReenableUpdatesCoalesceOnSemaphore(void);
void* SLSSetRegisteredCursor(void);
void* SLSSetSecureEventInput(void);
void* SLSSetSessionPropertiesTemporaryBridge(void);
void* SLSSetSessionSwitchCubeAnimation(void);
void* SLSSetSpaceManagementMode(void);
void* SLSSetSurfaceBackgroundBlur(void);
void* SLSSetSurfaceBounds(void);
void* SLSSetSurfaceColorSpace(void);
void* SLSSetSurfaceLayerBackingOptions(void);
void* SLSSetSurfaceListAlpha(void);
void* SLSSetSurfaceOpacity(void);
void* SLSSetSurfaceProperty(void);
void* SLSSetSurfaceProxiesForNextFlush(void);
void* SLSSetSurfaceResolution(void);
void* SLSSetSurfaceShape(void);
void* SLSSetSurfaceVersionedProxiesForNextFlush(void);
void* SLSSetSwipeScrollDirection(void);
void* SLSSetSymbolicHotKey(void);
void* SLSSetSymbolicHotKeyButtonValue(void);
void* SLSSetSymbolicHotKeyEnabled(void);
void* SLSSetSymbolicHotKeyEnabledForConnection(void);
void* SLSSetSymbolicHotKeyRepresentation(void);
void* SLSSetSymbolicHotKeyValue(void);
void* SLSSetSymbolicHotKeyWithExclusion(void);
void* SLSSetSymbolicHotKeyWithOptions(void);
void* SLSSetSymbolicHotModifierValue(void);
void* SLSSetSystemDefinedCursor(void);
void* SLSSetSystemDefinedCursorWithSeed(void);
void* SLSSetSystemStatusBarWindowSubitemOffsets(void);
void* SLSSetTrackingAreaClip(void);
void* SLSSetTrackingAreaEnabled(void);
void* SLSSetTrackingAreaOption(void);
void* SLSSetTrackingAreaRect(void);
void* SLSSetTrackingAreaShape(void);
void* SLSSetTrackingAreasEnabled(void);
void* SLSSetUniversalOwner(void);
void* SLSSetWindowAccelerationState(void);
void* SLSSetWindowActive(void);
void* SLSSetWindowAlpha(void);
void* SLSSetWindowAlphaShape(void);
void* SLSSetWindowAnimationProgress(void);
void* SLSSetWindowAutofill(void);
void* SLSSetWindowAutofillColor(void);
void* SLSSetWindowBackgroundBlurRadius(void);
void* SLSSetWindowBackgroundBlurRadiusStyle(void);
void* SLSSetWindowBackgroundBlurRadiusWithOpacityHint(void);
void* SLSSetWindowCaptureExcludeShape(void);
void* SLSSetWindowClipShape(void);
void* SLSSetWindowColorSpace(void);
void* SLSSetWindowCornerMask(void);
void* SLSSetWindowCursorRestrictionShape(void);
void* SLSSetWindowDepth(void);
void* SLSSetWindowDidOrderInOnNonCurrentManagedSpacesOnlyNotificationBlock(void);
void* SLSSetWindowDidOrderOutOnNonCurrentManagedSpacesNotificationBlock(void);
void* SLSSetWindowEventMask(void);
void* SLSSetWindowEventShape(void);
void* SLSSetWindowFiltering(void);
void* SLSSetWindowHasKeyAppearance(void);
void* SLSSetWindowHasMainAppearance(void);
void* SLSSetWindowLevel(void);
void* SLSSetWindowLevelForGroup(void);
void* SLSSetWindowLevelsForActivation(void);
void* SLSSetWindowListAlpha(void);
void* SLSSetWindowListBrightness(void);
void* SLSSetWindowListFadeProperties(void);
void* SLSSetWindowListGlobalClipShape(void);
void* SLSSetWindowListSystemAlpha(void);
void* SLSSetWindowListSystemLevel(void);
void* SLSSetWindowListTags(void);
void* SLSSetWindowListWorkspace(void);
void* SLSSetWindowMovementGroup(void);
void* SLSSetWindowOpacity(void);
void* SLSSetWindowOpaqueShape(void);
void* SLSSetWindowOriginRelativeToWindow(void);
void* SLSSetWindowParent(void);
void* SLSSetWindowProperty(void);
void* SLSSetWindowRegionsLegacy(void);
void* SLSSetWindowResizeState(void);
void* SLSSetWindowResolution(void);
void* SLSSetWindowShadowAndRimParameters(void);
void* SLSSetWindowShadowAndRimParametersWithStretch(void);
void* SLSSetWindowShadowGroup(void);
void* SLSSetWindowShadowParameters(void);
void* SLSSetWindowShape(void);
void* SLSSetWindowShapeInWindowCoordinates(void);
void* SLSSetWindowShapeInWindowCoordinatesWithWeighting(void);
void* SLSSetWindowShapeWithWeighting(void);
void* SLSSetWindowSharingState(void);
void* SLSSetWindowSubLevel(void);
void* SLSSetWindowTags(void);
void* SLSSetWindowTitle(void);
void* SLSSetWindowToReleaseBackingOnOrderOut(void);
void* SLSSetWindowTransform(void);
void* SLSSetWindowTransformAtPlacement(void);
void* SLSSetWindowTransforms(void);
void* SLSSetWindowTransformsAtPlacement(void);
void* SLSSetWindowType(void);
void* SLSSetWindowWarp(void);
void* SLSSetZoomDisplay(void);
void* SLSSetZoomParameters(void);
void* SLSShapeSurface(void);
void* SLSShapeWindow(void);
void* SLSShapeWindowInWindowCoordinates(void);
void* SLSShieldCursor(void);
void* SLSShowCursor(void);
void* SLSShowSpaces(void);
void* SLSShutdownServerConnections(void);
void* SLSSnappingInfoAddMovement(void);
void* SLSSnappingInfoCreate(void);
void* SLSSnappingInfoEnumerateSnappingRects(void);
void* SLSSnappingInfoGetCurrentSnappedEdgesForRect(void);
void* SLSSnappingInfoGetCurrentVelocity(void);
void* SLSSnappingInfoGetLastSnappedRect(void);
void* SLSSnappingInfoGetSizeSnapRectForFrame(void);
void* SLSSnappingInfoGetSnappedEdges(void);
void* SLSSnappingInfoRelease(void);
void* SLSSnappingInfoResetMovement(void);
void* SLSSnappingInfoSetIsForResizing(void);
void* SLSSnappingInfoSetPrefs(void);
void* SLSSnappingInfoSetSnappedEdges(void);
void* SLSSnappingInfoSnapFrameForResizing(void);
void* SLSSnappingInfoSnapOriginWithFrame(void);
void* SLSSpaceAddOwner(void);
void* SLSSpaceAddWindowsAndRemoveFromSpaces(void);
void* SLSSpaceCanCreateTile(void);
void* SLSSpaceClientDrivenMoveSpacersToPoint(void);
void* SLSSpaceCopyManagedShape(void);
void* SLSSpaceCopyName(void);
void* SLSSpaceCopyOwners(void);
void* SLSSpaceCopyShape(void);
void* SLSSpaceCopyTileSpaces(void);
void* SLSSpaceCopyValues(void);
void* SLSSpaceCreate(void);
void* SLSSpaceCreateTile(void);
void* SLSSpaceDestroy(void);
void* SLSSpaceFinishedResizeForRect(void);
void* SLSSpaceGetAbsoluteLevel(void);
void* SLSSpaceGetAlpha(void);
void* SLSSpaceGetCompatID(void);
void* SLSSpaceGetInterTileSpacing(void);
void* SLSSpaceGetRect(void);
void* SLSSpaceGetSizeForProposedTile(void);
void* SLSSpaceGetSpacersAtPoint(void);
void* SLSSpaceGetTransform(void);
void* SLSSpaceGetType(void);
void* SLSSpaceIteratorAdvance(void);
void* SLSSpaceIteratorGetAbsoluteLevel(void);
void* SLSSpaceIteratorGetAttributes(void);
void* SLSSpaceIteratorGetCount(void);
void* SLSSpaceIteratorGetParentSpaceID(void);
void* SLSSpaceIteratorGetSpaceID(void);
void* SLSSpaceIteratorGetType(void);
void* SLSSpaceIteratorGetTypeID(void);
void* SLSSpaceMoveSpacersToPoint(void);
void* SLSSpacePreferCurrentDisplay(void);
void* SLSSpaceRemoveOwner(void);
void* SLSSpaceRemoveValuesForKeys(void);
void* SLSSpaceResetMenuBar(void);
void* SLSSpaceSetAbsoluteLevel(void);
void* SLSSpaceSetAlpha(void);
void* SLSSpaceSetCompatID(void);
void* SLSSpaceSetEdgeReservation(void);
void* SLSSpaceSetFrontPSN(void);
void* SLSSpaceSetInterTileSpacing(void);
void* SLSSpaceSetName(void);
void* SLSSpaceSetOrderingWeight(void);
void* SLSSpaceSetOwners(void);
void* SLSSpaceSetRelativeLevel(void);
void* SLSSpaceSetShape(void);
void* SLSSpaceSetTransform(void);
void* SLSSpaceSetType(void);
void* SLSSpaceSetValues(void);
void* SLSSpaceTileMoveToSpaceAtIndex(void);
void* SLSSpaceWithName(void);
void* SLSSpinControlDecodeMessage(void);
void* SLSSpinControlSetNotificationPort(void);
void* SLSStallServer(void);
void* SLSStatusItemNavigationRecordGetCurrentNavigationOptions(void);
void* SLSStatusItemNavigationRecordGetCurrentNavigationWindow(void);
void* SLSStructuralRegionMove(void);
void* SLSStructuralRegionSetChildRegionTransform(void);
void* SLSStructuralRegionSetClippedByWindow(void);
void* SLSStructuralRegionSetEventMask(void);
void* SLSStructuralRegionSetLevel(void);
void* SLSStructuralRegionSetShape(void);
void* SLSSuperShieldingWindowID(void);
void* SLSSwitchConsoleToSession(void);
void* SLSSystemStatusBarGetCurrentNavigationWindow(void);
void* SLSSystemStatusBarGetWindowPreferredPosition(void);
void* SLSSystemStatusBarNavigateFromWindow(void);
void* SLSSystemStatusBarRegisterReplicantWindow(void);
void* SLSSystemStatusBarRegisterSortedWindow(void);
void* SLSSystemStatusBarRegisterWindow(void);
void* SLSSystemStatusBarWindowIsDraggedOutOfBar(void);
void* SLSTileEvictionRecordGetManagedSpaceID(void);
void* SLSTileEvictionRecordGetTileID(void);
void* SLSTileOwnerChangeRecordGetManagedSpaceID(void);
void* SLSTileOwnerChangeRecordGetNewOwner(void);
void* SLSTileOwnerChangeRecordGetOldOwner(void);
void* SLSTileOwnerChangeRecordGetTileID(void);
void* SLSTileSpaceMoveSpacersForSize(void);
void* SLSTileSpaceReplaceWithSnapshotWindow(void);
void* SLSTileSpaceResizeRecordGetParentSpaceID(void);
void* SLSTileSpaceResizeRecordGetSpaceID(void);
void* SLSTileSpaceResizeRecordIsLiveResizing(void);
void* SLSTileSpaceSetDividerWindow(void);
void* SLSToggleDisplayZoom(void);
void* SLSTouchBarServerRegister(void);
void* SLSTrackingRegionSetForceConfig(void);
void* SLSTrackingRegionSetIsEnabled(void);
void* SLSTrackingRegionSetRespectsSystemAlphaThreshold(void);
void* SLSTransactionAddWindowToSpace(void);
void* SLSTransactionAddWindowToSpaceAndRemoveFromSpaces(void);
void* SLSTransactionBindSurface(void);
void* SLSTransactionClearMenuBarSystemOverrideAlphas(void);
void* SLSTransactionClearWindowLockedBounds(void);
void* SLSTransactionClearWindowSystemLevel(void);
void* SLSTransactionCommit(void);
void* SLSTransactionCommitCoalescing(void);
void* SLSTransactionCreate(void);
void* SLSTransactionDeferWindowMoveEvents(void);
void* SLSTransactionDestroySpace(void);
void* SLSTransactionGetTypeID(void);
void* SLSTransactionHideSpace(void);
void* SLSTransactionMoveWindowWithGroup(void);
void* SLSTransactionMoveWindowsToManagedSpace(void);
void* SLSTransactionOrderSurface(void);
void* SLSTransactionOrderWindow(void);
void* SLSTransactionOrderWindowGroup(void);
void* SLSTransactionOverrideAppSleepNotifications(void);
void* SLSTransactionPostBroadcastNotification(void);
void* SLSTransactionPostNotificationToConnection(void);
void* SLSTransactionRemoveWindowFromSpace(void);
void* SLSTransactionRemoveWindowFromSpaces(void);
void* SLSTransactionResetSpaceMenuBar(void);
void* SLSTransactionResetWindow(void);
void* SLSTransactionResetWindowSubLevel(void);
void* SLSTransactionSetBackdropChameleonContribution(void);
void* SLSTransactionSetChameleonUpdatesEnabled(void);
void* SLSTransactionSetClientAdvisory(void);
void* SLSTransactionSetEventCapture(void);
void* SLSTransactionSetManagedDisplayCurrentSpace(void);
void* SLSTransactionSetManagedDisplayIsAnimating(void);
void* SLSTransactionSetMenuBarBounds(void);
void* SLSTransactionSetMenuBarSystemOverrideAlpha(void);
void* SLSTransactionSetSpaceAbsoluteLevel(void);
void* SLSTransactionSetSpaceAlpha(void);
void* SLSTransactionSetSpaceOrderingWeight(void);
void* SLSTransactionSetSpaceShape(void);
void* SLSTransactionSetSpaceTransform(void);
void* SLSTransactionSetSurfaceBounds(void);
void* SLSTransactionSetSurfaceOpacity(void);
void* SLSTransactionSetSurfaceResolution(void);
void* SLSTransactionSetWindowAlpha(void);
void* SLSTransactionSetWindowBrightness(void);
void* SLSTransactionSetWindowGlobalClipShape(void);
void* SLSTransactionSetWindowLevel(void);
void* SLSTransactionSetWindowLockedBounds(void);
void* SLSTransactionSetWindowOpaqueShape(void);
void* SLSTransactionSetWindowProperty(void);
void* SLSTransactionSetWindowReleasesBackingOnOrderOut(void);
void* SLSTransactionSetWindowResolution(void);
void* SLSTransactionSetWindowShape(void);
void* SLSTransactionSetWindowSubLevel(void);
void* SLSTransactionSetWindowSystemAlpha(void);
void* SLSTransactionSetWindowSystemLevel(void);
void* SLSTransactionSetWindowTransform(void);
void* SLSTransactionSetWindowWarp(void);
void* SLSTransactionShowSpace(void);
void* SLSTransactionSpaceTileMoveToSpaceAtIndex(void);
void* SLSTransactionUpdateRegion(void);
void* SLSTransactionWillSwitchSpaces(void);
void* SLSTranslatePointForWindow(void);
void* SLSUniqueSurfaceID(void);
void* SLSUnlockWindowBackingStore(void);
void* SLSUnlockWindowBits(void);
void* SLSUnlockWindowRectBits(void);
void* SLSUnlockWindowVisibleRegion(void);
void* SLSUnpackDeferredUpdateNotification(void);
void* SLSUnregisterUpdateInformationHandler(void);
void* SLSUnregisterWindowWithSystemStatusBar(void);
void* SLSUnshieldCursor(void);
void* SLSUpdateCurrentSessionWorkspaceData(void);
void* SLSUpdateLastEventTime(void);
void* SLSUpdateSystemActivity(void);
void* SLSUpdateWindowAnimationEdges(void);
void* SLSUpdateWindowAnimationOrigin(void);
void* SLSValidateUnobscuredLayerSecurityToken(void);
void* SLSWaitOnCoalescedUpdates(void);
void* SLSWarpCursorPosition(void);
void* SLSWasBootApplePreserved(void);
void* SLSWillSwitchSpaces(void);
void* SLSWindowAnimationChangeLevel(void);
void* SLSWindowAnimationChangeShiftPoint(void);
void* SLSWindowAnimationChangeSubLevel(void);
void* SLSWindowAnimationHideSlot(void);
void* SLSWindowAnimationSetParent(void);
void* SLSWindowBackdropActivate(void);
void* SLSWindowBackdropActivateAll(void);
void* SLSWindowBackdropBlendModeStringToEnum(void);
void* SLSWindowBackdropCreateWithLevel(void);
void* SLSWindowBackdropCreateWithLevelAndMask(void);
void* SLSWindowBackdropCreateWithLevelAndTintColor(void);
void* SLSWindowBackdropDeactivate(void);
void* SLSWindowBackdropDeactivateAll(void);
void* SLSWindowBackdropGetTypeID(void);
void* SLSWindowBackdropMaterialStringToEnum(void);
void* SLSWindowBackdropRelease(void);
void* SLSWindowBackdropSetSaturation(void);
void* SLSWindowBackdropSetSelectionTintColor(void);
void* SLSWindowDirtyRegionSeed(void);
void* SLSWindowFreezeBackdrops(void);
void* SLSWindowFreezeWithOptions(void);
void* SLSWindowGetTileRect(void);
void* SLSWindowIsOnCurrentSpace(void);
void* SLSWindowIsOrderedIn(void);
void* SLSWindowIsVisible(void);
void* SLSWindowIteratorAdvance(void);
void* SLSWindowIteratorCopyAttachedWindows(void);
void* SLSWindowIteratorCopySpaces(void);
void* SLSWindowIteratorCopyTitle(void);
void* SLSWindowIteratorGetAlpha(void);
void* SLSWindowIteratorGetAttachedWindowCount(void);
void* SLSWindowIteratorGetAttributes(void);
void* SLSWindowIteratorGetBounds(void);
void* SLSWindowIteratorGetConstraints(void);
void* SLSWindowIteratorGetCount(void);
void* SLSWindowIteratorGetFrameBounds(void);
void* SLSWindowIteratorGetLevel(void);
void* SLSWindowIteratorGetMatchingSpaceID(void);
void* SLSWindowIteratorGetOwner(void);
void* SLSWindowIteratorGetPID(void);
void* SLSWindowIteratorGetPSN(void);
void* SLSWindowIteratorGetParentID(void);
void* SLSWindowIteratorGetScreenRect(void);
void* SLSWindowIteratorGetSpaceAttributes(void);
void* SLSWindowIteratorGetSpaceCount(void);
void* SLSWindowIteratorGetSpaceTypeMask(void);
void* SLSWindowIteratorGetTags(void);
void* SLSWindowIteratorGetTypeID(void);
void* SLSWindowIteratorGetWindowID(void);
void* SLSWindowIteratorIsInSpace(void);
void* SLSWindowListSetLockedBounds(void);
void* SLSWindowQueryCopyValue(void);
void* SLSWindowQueryCreate(void);
void* SLSWindowQueryGetTypeID(void);
void* SLSWindowQueryResultCopyManagedDisplays(void);
void* SLSWindowQueryResultCopySpaces(void);
void* SLSWindowQueryResultCopyWindows(void);
void* SLSWindowQueryResultGetManagedDisplayCount(void);
void* SLSWindowQueryResultGetSpaceCount(void);
void* SLSWindowQueryResultGetTypeID(void);
void* SLSWindowQueryResultGetWindowCount(void);
void* SLSWindowQueryRun(void);
void* SLSWindowQuerySetValue(void);
void* SLSWindowQueryWindows(void);
void* SLSWindowRightForKey(void);
void* SLSWindowRightKeyForMask(void);
void* SLSWindowRightsSetGrantCompletedBlockForToken(void);
void* SLSWindowRightsSetGrantOfferedBlockForToken(void);
void* SLSWindowScrollRegion(void);
void* SLSWindowSetActiveShadowLegacy(void);
void* SLSWindowSetBackdropBackgroundBleed(void);
void* SLSWindowSetKeepsExcessBackingAllocation(void);
void* SLSWindowSetResizeRegionShape(void);
void* SLSWindowSetShadowProperties(void);
void* SLSWindowSetTrustedForObscuring(void);
void* SLSWindowThaw(void);
void* SLSWindowThawBackdrops(void);
void* SLSWindowVisibleRegionSeed(void);
void* SLSZoomPoint(void);
void* SLScreenRegisterMoveCallback(void);
void* SLScreenUnregisterMoveCallback(void);
void* SLSecureCursorAssertionCreate(void);
void* SLSecureCursorAssertionInvalidate(void);
void* SLSecureCursorAssertionIsValid(void);
void* SLSessionCopyCurrentDictionary(void);
void* SLSessionOwnerCopyXPCSerializationAndInvalidate(void);
void* SLSessionOwnerCreateBySettingLoginwindowConnection(void);
void* SLSessionOwnerCreateNewSessionWithAuditSessionID(void);
void* SLSessionOwnerCreateWithPort(void);
void* SLSessionOwnerCreateWithXPCSerialization(void);
void* SLSessionOwnerGetAuditSessionID(void);
void* SLSessionOwnerGetSessionID(void);
void* SLSessionOwnerIsValid(void);
void* SLSetDisplayTransferByByteTable(void);
void* SLSetDisplayTransferByFormula(void);
void* SLSetDisplayTransferByTable(void);
void* SLSetLocalEventsFilterDuringSuppressionState(void);
void* SLSetLocalEventsFilterDuringSupressionState(void);
void* SLSetLocalEventsSuppressionInterval(void);
void* SLShieldingWindowID(void);
void* SLShieldingWindowLevel(void);
void* SLUnregisterScreenRefreshCallback(void);
void* SLWaitForScreenRefreshRects(void);
void* SLWaitForScreenUpdateRects(void);
void* SLWarpMouseCursorPosition(void);
void* SLWindowContextCreate(void);
void* SLWindowContextCreateImage(void);
void* SLWindowContextGetConnection(void);
void* SLWindowContextGetWindow(void);
void* SLWindowLevelForKey(void);
void* SLWindowListCopyWindowInfo(void);
void* SLWindowListCreate(void);
void* SLWindowListCreateArray(void);
void* SLWindowListCreateDescriptionFromArray(void);
void* SLWindowListCreateImage(void);
void* SLWindowListCreateImageFromArray(void);
void* SLWindowServerCFMachPort(void);
void* SLWindowServerCreateServerPort(void);
void* SLXServer(void);
void* _SLDisplayCapturedByPsn(void);
void* _SLPSCreateStubApplicationWithConnection(void);
void* _SLPSEqualProcess(void);
void* _SLPSGetCurrentProcess(void);
void* _SLPSGetFrontProcess(void);
void* _SLPSRegisterWithServer(void);
void* _SLPSSetFrontProcessWithOptions(void);
void* _SLSDefaultConnection(void);
void* slglsAttachDrawable(void);
void* slglsAttachPBuffer(void);
void* slglsAttachState(void);
void* slglsCreateContext(void);
void* slglsCreatePBuffer(void);
void* slglsDestroyContext(void);
void* slglsDestroyPBuffer(void);
void* slglsDestroyRendererInfo(void);
void* slglsGetInteger(void);
void* slglsGetPixelFormat(void);
void* slglsGetState(void);
void* slglsGetSurface(void);
void* slglsGetVirtualScreen(void);
void* slglsQueryRendererInfo(void);
void* slglsSetInteger(void);
void* slglsTexImageIOSurface2D(void);
void* slglsTexImagePBuffer(void);

#endif
