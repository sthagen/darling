/*
 This file is part of Darling.

 Copyright (C) 2017 Lubos Dolezel

 Darling is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 Darling is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with Darling.  If not, see <http://www.gnu.org/licenses/>.
*/


#ifndef _QuickLook_H_
#define _QuickLook_H_

#import <Foundation/Foundation.h>

#import <QuickLook/QLTestingLog.h>
#import <QuickLook/QLDebugController.h>
#import <QuickLook/QLDebugServerController.h>
#import <QuickLook/QLDebugSatelliteController.h>
#import <QuickLook/QLPreview.h>
#import <QuickLook/QLImageWrapper.h>

void* QLAdaptContextCTMToFitRectInRect(void);
void* QLAdaptContextCTMToScaleRectToRect(void);
void* QLAdaptSizeInSize(void);
void* QLAdaptSizeOutSize(void);
void* QLAdaptSizeToRect(void);
void* QLAdaptSizeToRectWithRounding(void);
void* QLAdjustRectInRect(void);
void* QLBitmapContextLengthWithSize(void);
void* QLBitmapGetPixelSizeForPointSize(void);
void* QLCacheObserverCancel(void);
void* QLCacheObserverCreate(void);
void* QLCacheObserverGetTypeID(void);
void* QLCacheObserverResume(void);
void* QLCacheObserverSetInvalidationBlock(void);
void* QLCacheObserverSuspend(void);
void* QLCachedDrawingCreate(void);
void* QLCachedDrawingDispose(void);
void* QLCachedDrawingDraw(void);
void* QLCheckAccessForURL(void);
void* QLCheckAppleSignature(void);
void* QLCompareVersion(void);
void* QLContextCreateGrayColorSpace(void);
void* QLContextCreateRGBColorSpace(void);
void* QLContextSetGrayFillColor(void);
void* QLContextSetGrayStrokeColor(void);
void* QLContextSetRGBFillColor(void);
void* QLContextSetRGBStrokeColor(void);
void* QLCopyIconImageFromURL(void);
void* QLCopyURLQueryDictionary(void);
void* QLCreateImageWithBitmapContext(void);
void* QLCreateImageWithBlock(void);
void* QLCreateImageWithMallocedBitmapContextTransferData(void);
void* QLCreateMallocedBitmapContextWithSize(void);
void* QLCreateMallocedBitmapContextWithSizeSupportingSubPixelAntialiasing(void);
void* QLCreateMallocedGrayscaleContextWithSize(void);
void* QLCreateReservedBitmapContextWithSize(void);
void* QLCreateURLByResolvingAlias(void);
void* QLCreateURLByResolvingSymlink(void);
void* QLCreateVMBitmapContextWithSize(void);
void* QLDeletePaths(void);
void* QLDiskStoreAcceptsThumbnails(void);
void* QLDiskStoreCopyDiskStoreForURL(void);
void* QLDiskStoreCopyDiskStores(void);
void* QLDiskStoreExecuteBlock(void);
void* QLDiskStoreGetAvailableDiskSpace(void);
void* QLDiskStoreGetMountPath(void);
void* QLDiskStoreGetTypeID(void);
void* QLDiskStoreHasThumbnailCache(void);
void* QLDiskStoreIsDistant(void);
void* QLDiskStoreIsEncrypted(void);
void* QLDrawCGPDFPage(void);
void* QLDrawCGPDFPageInRect(void);
void* QLDrawDebugRect(void);
void* QLDrawGrayLinearGradient(void);
void* QLDrawIconImageForURL(void);
void* QLDrawLinearGradient(void);
void* QLDrawPDFPage(void);
void* QLDrawPDFPageInRect(void);
void* QLError(void);
void* QLGeneratorDispatchBlock(void);
void* QLGeneratorGetTypeID(void);
void* QLGetCGPDFDrawRect(void);
void* QLGetCGPDFDrawingTransform(void);
void* QLGetCGPDFPageRect(void);
void* QLGetPDFDrawRect(void);
void* QLGetPDFDrawingTransform(void);
void* QLGetPDFPageRect(void);
void* QLGetRealPath(void);
void* QLIconContextFinish(void);
void* QLIconContextNextPage(void);
void* QLIconContextStart(void);
void* QLIconCreateBackAndFrontLayerImages(void);
void* QLIconCreateMaskImage(void);
void* QLIconCreateMaskImageNoFlavor(void);
void* QLIconCreateWithImage(void);
void* QLIconCreateWithImageAndOptions(void);
void* QLIconDrawWithOptions(void);
void* QLIconGetMaxImageSize(void);
void* QLIconSetCopyImageURLForSize(void);
void* QLIconSetIsValid(void);
void* QLImageCopySampleColors(void);
void* QLImageIOCleanupContext(void);
void* QLImageIOCreateThumbnailFromData(void);
void* QLImageIOCreateThumbnailFromURL(void);
void* QLImageIOCreateThumbnailWithImageSource(void);
void* QLImageIODrawImageInContext(void);
void* QLImageIOFillContextForData(void);
void* QLImageIOFillContextForURL(void);
void* QLImageIOGetAffineTransformFromCGImage(void);
void* QLInitLogging(void);
void* QLIsDiskCacheEnabled(void);
void* QLIsFileURL(void);
void* QLLoadImageAtPath(void);
void* QLLoadImageFromBundle(void);
void* QLLoadImageFromBundleWithID(void);
void* QLLoadQuickLookUISymbol(void);
void* QLLogSetLoggingFunction(void);
void* QLMiniCacheGetSizeInBytes(void);
void* QLMiniCachePurgeEntriesBySize(void);
void* QLMiniCachePurgeLeastRecentlyUsedEntries(void);
void* QLMiniCachePurgeURL(void);
void* QLMiniCachePurgeURLs(void);
void* QLMiniCacheRegisterCache(void);
void* QLMiniCacheUnregisterCache(void);
void* QLPreviewBubbleCopyDocumentURL(void);
void* QLPreviewBubbleCopyLaunchURL(void);
void* QLPreviewBubbleCopySeamlessOpeningInformation(void);
void* QLPreviewBubbleCreate(void);
void* QLPreviewBubbleGetTypeID(void);
void* QLPreviewBubbleGetUsedEdge(void);
void* QLPreviewBubbleGetWindowID(void);
void* QLPreviewBubbleHide(void);
void* QLPreviewBubbleInvalidate(void);
void* QLPreviewBubbleInvertShowBubbleEffect(void);
void* QLPreviewBubbleInvokeShowBubbleEffect(void);
void* QLPreviewBubbleIsVisible(void);
void* QLPreviewBubbleSetAnimationProgress(void);
void* QLPreviewBubbleSetButtonClickHandler(void);
void* QLPreviewBubbleSetDispatchQueue(void);
void* QLPreviewBubbleSetDisplayPathAndAdditionalString(void);
void* QLPreviewBubbleSetDoubleClickHandler(void);
void* QLPreviewBubbleSetEventCallbacks(void);
void* QLPreviewBubbleSetLoadedHandler(void);
void* QLPreviewBubbleSetWillOpenURLHandler(void);
void* QLPreviewBubbleShow(void);
void* QLPreviewCancel(void);
void* QLPreviewClose(void);
void* QLPreviewCopyBitmapImage(void);
void* QLPreviewCopyData(void);
void* QLPreviewCopyDictionaryRepresentation(void);
void* QLPreviewCopyDocumentURL(void);
void* QLPreviewCopyNextData(void);
void* QLPreviewCopyOptions(void);
void* QLPreviewCopyPreviewContentType(void);
void* QLPreviewCopyProperties(void);
void* QLPreviewCopyURLRepresentation(void);
void* QLPreviewCreate(void);
void* QLPreviewCreateFromSearchItem(void);
void* QLPreviewCreateUniqueAttachmentURL(void);
void* QLPreviewDiscardAllPendingActions(void);
void* QLPreviewDocumentComputePreview(void);
void* QLPreviewDocumentCopyContentType(void);
void* QLPreviewDocumentCopyData(void);
void* QLPreviewDocumentCopyPageAsImage(void);
void* QLPreviewDocumentCopyPageText(void);
void* QLPreviewDocumentCopyProperties(void);
void* QLPreviewDocumentCopySuggestedFilename(void);
void* QLPreviewDocumentCopyURL(void);
void* QLPreviewDocumentCreateWithURL(void);
void* QLPreviewDocumentDrawPage(void);
void* QLPreviewDocumentGetPageCount(void);
void* QLPreviewDocumentGetPageSize(void);
void* QLPreviewDocumentGetTypeID(void);
void* QLPreviewDocumentIsPaginated(void);
void* QLPreviewDocumentSetServer(void);
void* QLPreviewFreePreviewData(void);
void* QLPreviewGetDisplayBundleID(void);
void* QLPreviewGetInlinePreviewSupportedContentTypes(void);
void* QLPreviewGetLastError(void);
void* QLPreviewGetLoadingPlaceholder(void);
void* QLPreviewGetPreviewSizeHint(void);
void* QLPreviewGetRepresentedObject(void);
void* QLPreviewGetTypeID(void);
void* QLPreviewIsCancelled(void);
void* QLPreviewIsGenericFolder(void);
void* QLPreviewIsPreferringDarkLoading(void);
void* QLPreviewIsProgressive(void);
void* QLPreviewIsRawImage(void);
void* QLPreviewIsWithinContentTypeLimit(void);
void* QLPreviewProcessProgressiveRendering(void);
void* QLPreviewRequestAppendDataToAttachment(void);
void* QLPreviewRequestCopyContentUTI(void);
void* QLPreviewRequestCopyOptions(void);
void* QLPreviewRequestCopyURL(void);
void* QLPreviewRequestCreateAttachmentURL(void);
void* QLPreviewRequestCreateContext(void);
void* QLPreviewRequestCreatePDFContext(void);
void* QLPreviewRequestFlushContext(void);
void* QLPreviewRequestGetDocumentObject(void);
void* QLPreviewRequestGetGeneratorBundle(void);
void* QLPreviewRequestGetTypeID(void);
void* QLPreviewRequestIsCancelled(void);
void* QLPreviewRequestSetData(void);
void* QLPreviewRequestSetDataRepresentation(void);
void* QLPreviewRequestSetDocumentObject(void);
void* QLPreviewRequestSetPreviewType(void);
void* QLPreviewRequestSetURLRepresentation(void);
void* QLPreviewRequestSetWebContent(void);
void* QLPreviewRequestStartDataRepresentation(void);
void* QLPreviewSetApplicationBundleIdentifier(void);
void* QLPreviewSetContentTypeLimits(void);
void* QLPreviewSetDisplayBundleID(void);
void* QLPreviewSetExtensionPath(void);
void* QLPreviewSetForceContentTypeUTI(void);
void* QLPreviewSetPreviewURL(void);
void* QLPreviewSetProperties(void);
void* QLPreviewSetRepresentedObject(void);
void* QLPreviewSetSearchableItemUniqueIdentifier(void);
void* QLPreviewSetServer(void);
void* QLPreviewSupportsContentUTI(void);
void* QLPreviewSupportsFileAtURL(void);
void* QLPreviewTypeConfigureGenerator(void);
void* QLPreviewTypeDisplayBundleWantsToBeResized(void);
void* QLPreviewTypeGetDisplayBundleCount(void);
void* QLPreviewTypeGetDisplayBundleIDForUTI(void);
void* QLPreviewTypeGetDisplayBundleIDsAndNames(void);
void* QLPreviewTypeGetRawImageContentType(void);
void* QLPreviewTypeGetRawImageDisplayBundleID(void);
void* QLPreviewTypeGetStaticDisplayBundleIDForUTI(void);
void* QLPreviewTypeIsDisplayBundleIDSafe(void);
void* QLPreviewTypeProcessThirdPartyGeneratorType(void);
void* QLPreviewUpdateWithDictionaryRepresentation(void);
void* QLPushCustomRoundedRect(void);
void* QLPushRoundedRect(void);
void* QLRequestCheckAccess(void);
void* QLRequestCopyContentUTI(void);
void* QLRequestCopyURL(void);
void* QLRequestDispatchBlock(void);
void* QLRequestFillUUID(void);
void* QLRequestGetGeneratorBundle(void);
void* QLRequestIsCancelled(void);
void* QLRequestIsThumbnailRequest(void);
void* QLRequestMarkAsCancelled(void);
void* QLRequestReplyWithDiscardError(void);
void* QLRequestSessionCopyAndNotifyPortDeathWithPort(void);
void* QLRequestSessionDisableInstantOff(void);
void* QLRequestSessionDiscardAllSessions(void);
void* QLRequestSessionEnableInstantOff(void);
void* QLRequestSessionGetReplyPort(void);
void* QLRequestSessionGetRequest(void);
void* QLRequestSessionGetSessionCount(void);
void* QLRequestSessionGetTypeID(void);
void* QLRequestSessionIsInstantOffEnabled(void);
void* QLRequestSessionPerformAsync(void);
void* QLRequestSessionPerformSync(void);
void* QLRequestSessionSetupCrashReportMessageForRequest(void);
void* QLRequestSessionSetupSessions(void);
void* QLRequestSetDiscardError(void);
void* QLRequestSetupSession(void);
void* QLRequestUnsetupSession(void);
void* QLSandboxReleaseHandle(void);
void* QLSandboxTokenConsume(void);
void* QLSandboxTokenCreateFileRead(void);
void* QLScaleRect(void);
void* QLSeamlessClosingRequestCreate(void);
void* QLSeamlessClosingRequestDiscard(void);
void* QLSeamlessClosingRequestDiscardRequestsWithAssociatedObject(void);
void* QLSeamlessClosingRequestGetAssociatedObject(void);
void* QLSeamlessClosingRequestGetTypeID(void);
void* QLSeamlessClosingRequestRegister(void);
void* QLSeamlessClosingRequestSetAssociatedObject(void);
void* QLSeamlessClosingRequestSetDispatchQueue(void);
void* QLSeamlessClosingRequestSetHandler(void);
void* QLSeamlessOpeningRequestBindToPID(void);
void* QLSeamlessOpeningRequestCreate(void);
void* QLSeamlessOpeningRequestDiscard(void);
void* QLSeamlessOpeningRequestGetClosingRequest(void);
void* QLSeamlessOpeningRequestGetTypeID(void);
void* QLSeamlessOpeningRequestOpenItem(void);
void* QLSeamlessOpeningRequestSetCompletionHandler(void);
void* QLSeamlessOpeningRequestSetDispatchQueue(void);
void* QLServerCheckIn(void);
void* QLServerCheckOut(void);
void* QLServerCheckUsage(void);
void* QLServerCopyPortToServer(void);
void* QLServerCopyServerWithName(void);
void* QLServerCreate(void);
void* QLServerCreateHelperServer(void);
void* QLServerCreateHelperServerWithOptions(void);
void* QLServerCreateServerToMachPort(void);
void* QLServerCreateWithName(void);
void* QLServerGetMemoryUsage(void);
void* QLServerGetNumberOfAvailableFDs(void);
void* QLServerGetQuickLookClient(void);
void* QLServerGetTimeoutForRequest(void);
void* QLServerGetTypeID(void);
void* QLServerResetCachedPort(void);
void* QLServerSetDefaultServer(void);
void* QLServerSetup32bitServerWithName(void);
void* QLServerShutDownServer(void);
void* QLThumbnailCancel(void);
void* QLThumbnailComputeAsync(void);
void* QLThumbnailCopyCacheIDForURL(void);
void* QLThumbnailCopyClientProperties(void);
void* QLThumbnailCopyDocumentURL(void);
void* QLThumbnailCopyImage(void);
void* QLThumbnailCopyImageMask(void);
void* QLThumbnailCopyOptions(void);
void* QLThumbnailCopyProperties(void);
void* QLThumbnailCopySpecialGenericImage(void);
void* QLThumbnailCreate(void);
void* QLThumbnailCreateSpecialGenericIcon(void);
void* QLThumbnailDeleteCacheForVolume(void);
void* QLThumbnailDispatchAsync(void);
void* QLThumbnailGetContentRect(void);
void* QLThumbnailGetMaximumSize(void);
void* QLThumbnailGetRepresentedObject(void);
void* QLThumbnailGetTypeID(void);
void* QLThumbnailImageCreate(void);
void* QLThumbnailInvalidateCacheForURL(void);
void* QLThumbnailInvalidateCacheForURLs(void);
void* QLThumbnailIsCancelled(void);
void* QLThumbnailIsGenericFolder(void);
void* QLThumbnailIsLowQuality(void);
void* QLThumbnailNotifyWhenAdditionIsAvailable(void);
void* QLThumbnailQueueAddThumbnail(void);
void* QLThumbnailQueueAddThumbnailsFromArray(void);
void* QLThumbnailQueueCancelAll(void);
void* QLThumbnailQueueCancelThumbnails(void);
void* QLThumbnailQueueCreate(void);
void* QLThumbnailQueueGetTypeID(void);
void* QLThumbnailQueueInvalidate(void);
void* QLThumbnailQueueIsProcessing(void);
void* QLThumbnailQueueRun(void);
void* QLThumbnailQueueSetClient(void);
void* QLThumbnailQueueSetCompletionBlock(void);
void* QLThumbnailQueueSetMaximumQueuePushCount(void);
void* QLThumbnailQueueSetMinimumQueuePushCount(void);
void* QLThumbnailQueueWakeUp(void);
void* QLThumbnailRequestCopyBackPageContext(void);
void* QLThumbnailRequestCopyContentUTI(void);
void* QLThumbnailRequestCopyOptions(void);
void* QLThumbnailRequestCopyURL(void);
void* QLThumbnailRequestCreateContext(void);
void* QLThumbnailRequestFlushContext(void);
void* QLThumbnailRequestGetBitmapMaximumSize(void);
void* QLThumbnailRequestGetDimension(void);
void* QLThumbnailRequestGetDocumentObject(void);
void* QLThumbnailRequestGetGeneratorBundle(void);
void* QLThumbnailRequestGetMaximumSize(void);
void* QLThumbnailRequestGetTypeID(void);
void* QLThumbnailRequestIsCancelled(void);
void* QLThumbnailRequestSetDocumentObject(void);
void* QLThumbnailRequestSetImage(void);
void* QLThumbnailRequestSetImageAtURL(void);
void* QLThumbnailRequestSetImageWithData(void);
void* QLThumbnailRequestSetThumbnailWithDataRepresentation(void);
void* QLThumbnailRequestSetThumbnailWithURLRepresentation(void);
void* QLThumbnailSetForceContentTypeUTI(void);
void* QLThumbnailSetRepresentedObject(void);
void* QLThumbnailSetServer(void);
void* QLThumbnailSupportsContentUTIAtSize(void);
void* QLUIHelperCreateCallbackSource(void);
void* QLUIHelperExecuteMachBlock(void);
void* QLUIHelperIsAvailable(void);
void* QLUIHelperRegisterForHelperDeath(void);
void* QLUIHelperServerDemux(void);
void* QLUIHelperServerPort(void);
void* QLUIHelperUnregisterFromHelperDeath(void);
void* QLUTIIsGenericFolder(void);
void* _DrawPSDGradient(void);
void* _QLAppPreferencesBooleanValueForKey(void);
void* _QLAppPreferencesCFIndexValueForKey(void);
void* _QLAppPreferencesFloatValueForKey(void);
void* _QLAppPreferencesIntValueForKey(void);
void* _QLAttributedStringCopyPlistRepresentation(void);
void* _QLBubbleFromPort(void);
void* _QLBubbleRegister(void);
void* _QLBubbleUnregister(void);
void* _QLCFDataGetBytes(void);
void* _QLCacheDidInvalidate(void);
void* _QLCacheInvalidationNotificationCopyURLs(void);
void* _QLCacheVersionCopyDescription(void);
void* _QLCacheVersionCopySerializedData(void);
void* _QLCacheVersionCreateFromURL(void);
void* _QLCacheVersionCreateFromURLWithGenerator(void);
void* _QLCacheVersionCreateWithBytes(void);
void* _QLCacheVersionCreateWithData(void);
void* _QLCacheVersionIsEqual(void);
void* _QLCacheVersionIsEqualIncludingGeneratorVersion(void);
void* _QLCopyAllThumbnailInfo(void);
void* _QLCopyCacheInfo(void);
void* _QLCopyCachedThumbnailsForURL(void);
void* _QLCopyPluginMapping(void);
void* _QLCopyServerStatistics(void);
void* _QLCopyUTITypeForFileAtURL(void);
void* _QLCrash(void);
void* _QLCrashForGoodReason(void);
void* _QLCreateArrayFromPlistBytesFromMIG(void);
void* _QLCreateAttributedStringFromPlistRepresentation(void);
void* _QLCreateCFStringFromQLStringFromMIG(void);
void* _QLCreateCFURLFromQLPathFromMIG(void);
void* _QLCreateCFURLFromQLURLFromMIG(void);
void* _QLCreateDictionaryFromPlistBytesFromMIG(void);
void* _QLCreateImageDataFromCGImageForXPC(void);
void* _QLCreateImageFromBitmapDataFromMIG(void);
void* _QLCreateImageFromBitmapDataFromXPC(void);
void* _QLCreateQLImageFromCGBitmapContextForMIG(void);
void* _QLCreateQLImageFromCGImageForMIG(void);
void* _QLCreateQLPathFromCFURLForMIG(void);
void* _QLCreateQLPathFromCFURLForMIGWithResolution(void);
void* _QLCreateQLStringFromCFStringForMIG(void);
void* _QLCreateQLURLFromCFURLForMIG(void);
void* _QLDebugWriteBitmapContextToDisk(void);
void* _QLDebugWriteImageToDisk(void);
void* _QLDebugWriteLayerToDisk(void);
void* _QLDestroyMallocedBitmapContext(void);
void* _QLDestroyReservedBitmapContext(void);
void* _QLDestroyVMBitmapContext(void);
void* _QLDictionaryBooleanValueForKey(void);
void* _QLDictionaryCGFloatValueForKey(void);
void* _QLDictionaryCopyURLForKey(void);
void* _QLDictionaryFloatValueForKey(void);
void* _QLDictionaryGetPointValueForKey(void);
void* _QLDictionaryGetRectValueForKey(void);
void* _QLDictionaryGetSizeValueForKey(void);
void* _QLDictionaryIntValueForKey(void);
void* _QLDictionarySInt32ValueForKey(void);
void* _QLDictionarySetBooleanValueForKey(void);
void* _QLDictionarySetCGFloatValueForKey(void);
void* _QLDictionarySetFloatValueForKey(void);
void* _QLDictionarySetIntValueForKey(void);
void* _QLDictionarySetPointValueForKey(void);
void* _QLDictionarySetRectValueForKey(void);
void* _QLDictionarySetSInt32ValueForKey(void);
void* _QLDictionarySetSizeValueForKey(void);
void* _QLDictionarySetURLForKey(void);
void* _QLDictionarySetValueForKeyIfExists(void);
void* _QLDictionaryValueForContentType(void);
void* _QLDictionaryValueForKey(void);
void* _QLDumpMachPortRights(void);
void* _QLEnableLogs(void);
void* _QLFlushLogs(void);
void* _QLForcePluginRegistration(void);
void* _QLFreeQLImageForMIG(void);
void* _QLFreeQLPathForMIG(void);
void* _QLFreeQLPathFromMIG(void);
void* _QLFreeQLStringForMIG(void);
void* _QLFreeQLStringFromMIG(void);
void* _QLFreeQLURLForMIG(void);
void* _QLFreeQLURLFromMIG(void);
void* _QLGeneratorAutoDisplayExtension(void);
void* _QLGeneratorCopyAllIDs(void);
void* _QLGeneratorCopyForcedGenerator(void);
void* _QLGeneratorCopyGeneratorForContentType(void);
void* _QLGeneratorCopyGeneratorForFile(void);
void* _QLGeneratorCopyGeneratorFromBundleURL(void);
void* _QLGeneratorCopyGeneratorFromID(void);
void* _QLGeneratorCopyGeneratorsLibrary(void);
void* _QLGeneratorCreate(void);
void* _QLGeneratorCreateBuiltin(void);
void* _QLGeneratorDisableBaseGenerators(void);
void* _QLGeneratorDisableUntrustedGenerators(void);
void* _QLGeneratorGetDefaultFlavor(void);
void* _QLGeneratorGetGeneratorID(void);
void* _QLGeneratorGetNoGenerator(void);
void* _QLGeneratorGetPluginURL(void);
void* _QLGeneratorGetPluginVersion(void);
void* _QLGeneratorIsFolderGeneratorAllowed(void);
void* _QLGeneratorNeedsAccessToExternalResources(void);
void* _QLGeneratorResetPluginCache(void);
void* _QLGeneratorScore(void);
void* _QLGeneratorSetMaxGlobalWeight(void);
void* _QLGeneratorSetPluginsWhiteList(void);
void* _QLGeneratorSupportsSandboxing(void);
void* _QLGlobalQuickLookPreferencesBooleanValueForKey(void);
void* _QLIconCopyIconSetImageName(void);
void* _QLIsLoggingEnabled(void);
void* _QLLogUpdateProcName(void);
void* _QLMachDispatchIncomingMessageAndReplyIfNecessary(void);
void* _QLMachGetMachPortCount(void);
void* _QLMachGetMinimumSequenceNumber(void);
void* _QLMachRegisterForNoSenders(void);
void* _QLMachUnregisterForNoSenders(void);
void* _QLMainLocalizedString(void);
void* _QLMiniCacheFolderCreateWithURL(void);
void* _QLPlugInLocalizedString(void);
void* _QLPostCacheInvalidationNotification(void);
void* _QLPostGlobalChangeNotification(void);
void* _QLPrefferedParentUTI(void);
void* _QLPreviewCopyUTIIfPresent(void);
void* _QLPreviewCreate(void);
void* _QLPreviewReplyAppendData(void);
void* _QLPreviewRequestCallGenerator(void);
void* _QLPreviewRequestCreate(void);
void* _QLPreviewRequestCreateFromXPCRepresentation(void);
void* _QLPreviewRequestDispatch(void);
void* _QLPreviewRequestFillXPCRepresentation(void);
void* _QLPreviewRequestForward32(void);
void* _QLPreviewRequestGotMoreData(void);
void* _QLPreviewRequestReplyForInvalidRequest(void);
void* _QLPreviewRequestReplyWithContentTypeAndProperties(void);
void* _QLPreviewRequestSendMoreData(void);
void* _QLPreviewRequestSendPendingReply(void);
void* _QLPreviewRequestSendReply(void);
void* _QLPreviewRequestSendStartNewAttachment(void);
void* _QLPreviewRequestSetDistantURLRepresentation(void);
void* _QLPreviewRequestSetupGenerator(void);
void* _QLPreviewRequestStartNewAttachment(void);
void* _QLPreviewRequestUpdateFromXPCRepresentation(void);
void* _QLPreviewRequestWontCallGenerator(void);
void* _QLRaiseAssert(void);
void* _QLRegisterCacheInvalidationObserver(void);
void* _QLRegisterForQuickLookGlobalNotification(void);
void* _QLRegisterGlobalChangeObserver(void);
void* _QLRequestCancelGenerator(void);
void* _QLRequestCleanupAfterException(void);
void* _QLRequestCreateFromXPCRepresentation(void);
void* _QLRequestFillXPCRepresentation(void);
void* _QLRequestGeneratorShouldRunInSatellite(void);
void* _QLRequestHasGeneratorFunction(void);
void* _QLRequestIsSandboxedGenerator(void);
void* _QLRequestNeedsAccessToExternalResources(void);
void* _QLRequestSendWillStart(void);
void* _QLRequestUnmapData(void);
void* _QLRequestUpdateFromXPCRepresentation(void);
void* _QLResetLogs(void);
void* _QLResetServer(void);
void* _QLSeamlessClosingRequestFromPort(void);
void* _QLSeamlessClosingRequestInvalidate(void);
void* _QLSeamlessOpeningCallCompletionHandlerAndInvalidate(void);
void* _QLSeamlessOpeningRequestFromPort(void);
void* _QLSeamlessOpeningRequestInvalidate(void);
void* _QLSeamlessOpeningRequestRegister(void);
void* _QLSeamlessOpeningRequestUnregister(void);
void* _QLSelectParentUTI(void);
void* _QLSetContainsContentType(void);
void* _QLSetThreadName(void);
void* _QLSimpleCrash(void);
void* _QLStackReleaseFrame(void);
void* _QLStopServerASAP(void);
void* _QLThreadCopyName(void);
void* _QLThumbnailComputeBaseline(void);
void* _QLThumbnailCopyCacheVersion(void);
void* _QLThumbnailCopyIDForSecureDelete(void);
void* _QLThumbnailCopyUTIIfPresent(void);
void* _QLThumbnailGetFlavor(void);
void* _QLThumbnailGetInlinePreviewMode(void);
void* _QLThumbnailImageCreateWithImageIO(void);
void* _QLThumbnailImageReplyGotContentTypeUTI(void);
void* _QLThumbnailNotifyWhenAdditionIsAvailable(void);
void* _QLThumbnailRequestCallGenerator(void);
void* _QLThumbnailRequestCleanUp(void);
void* _QLThumbnailRequestCleanupAfterException(void);
void* _QLThumbnailRequestCreate(void);
void* _QLThumbnailRequestCreateContext(void);
void* _QLThumbnailRequestCreateFlavorNumber(void);
void* _QLThumbnailRequestCreateFromXPCRepresentation(void);
void* _QLThumbnailRequestDispatch(void);
void* _QLThumbnailRequestFillXPCRepresentation(void);
void* _QLThumbnailRequestForward32(void);
void* _QLThumbnailRequestGetBitmapMaximumSizeForFlavor(void);
void* _QLThumbnailRequestGetCacheURL(void);
void* _QLThumbnailRequestGetIconMode(void);
void* _QLThumbnailRequestGetMaximumSizeForFlavor(void);
void* _QLThumbnailRequestGetOptions(void);
void* _QLThumbnailRequestGetRealMaximumBitmapDimension(void);
void* _QLThumbnailRequestGetRealMaximumBitmapSize(void);
void* _QLThumbnailRequestGetRealMaximumSize(void);
void* _QLThumbnailRequestGetScaleFactorForContext(void);
void* _QLThumbnailRequestHasCacheBeenTested(void);
void* _QLThumbnailRequestIsDistant(void);
void* _QLThumbnailRequestIsTooSmallForGenerator(void);
void* _QLThumbnailRequestReplyForInvalidRequest(void);
void* _QLThumbnailRequestSendPendingReply(void);
void* _QLThumbnailRequestSendReply(void);
void* _QLThumbnailRequestSetCacheTested(void);
void* _QLThumbnailRequestSetup(void);
void* _QLThumbnailRequestShouldTryCache(void);
void* _QLThumbnailRequestTryCacheRead(void);
void* _QLThumbnailRequestUpdateFromXPCRepresentation(void);
void* _QLThumbnailRequestWontCallGenerator(void);
void* _QLThumbnailSetImage(void);
void* _QLThumbnailSetThumbnailWithBitmapData(void);
void* _QLThumbnailSizeIsSufficentForLowQuality(void);
void* _QLUIHelperUnregisterFromHelperDeath(void);
void* _QLUnregisterCacheInvalidationObserver(void);
void* _QLXPCCGFloatValueForKey(void);
void* _QLXPCCopyCFObjectForKey(void);
void* _QLXPCCopyStringForKey(void);
void* _QLXPCCopyURLForKey(void);
void* _QLXPCFloatValueForKey(void);
void* _QLXPCGetPointValueForKey(void);
void* _QLXPCGetRectValueForKey(void);
void* _QLXPCGetSizeValueForKey(void);
void* _QLXPCIntValueForKey(void);
void* _QLXPCSInt32ValueForKey(void);
void* _QLXPCSetCFObjectForKey(void);
void* _QLXPCSetCGFloatValueForKey(void);
void* _QLXPCSetFloatValueForKey(void);
void* _QLXPCSetIntValueForKey(void);
void* _QLXPCSetPointValueForKey(void);
void* _QLXPCSetRectValueForKey(void);
void* _QLXPCSetSInt32ValueForKey(void);
void* _QLXPCSetSizeValueForKey(void);
void* _QLXPCSetStringForKey(void);
void* _QLXPCSetURLForKey(void);
void* _Z18QLTryCatchAndCrashU13block_pointerFvvE(void);
void* __QLLog_base(void);
void* __QLShouldLogForLevel(void);
void* _geParenttFolderForFileURL(void);
void* _genericIconNameForMaxSize(void);
void* _getHelperManagerQueue(void);
void* logTestState(void);
void* mt_log_quicklook_cache_size(void);
void* ql_dispatch_async(void);
void* ql_dispatch_once(void);
void* ql_dispatch_source_set_cancel_handler(void);
void* ql_dispatch_source_set_event_handler(void);
void* ql_dispatch_sync(void);
void* qlfuture_destroy(void);
void* qlfuture_dispatch(void);
void* qlfuture_notify(void);
void* qlfuture_wait(void);
void* qlstaticqueue(void);

#endif
